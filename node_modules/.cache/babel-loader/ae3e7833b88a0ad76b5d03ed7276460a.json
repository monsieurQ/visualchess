{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Square/Square.js\";\nimport React from 'react';\nimport './Square.css';\nimport Piece from '../Piece/Piece'; // import Draggable from 'react-draggable';\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      // this.setState({background: 'white'}); \n      console.log(`square ${e} clicked`);\n    };\n\n    this.handlePieceClick = e => {\n      console.log(`piece ${e} clicked`);\n    };\n\n    this.dragStartHandler = e => {\n      // e.preventDefault();\n      console.log(e.target);\n      e.dataTransfer.dropEffect = \"move\";\n      let element = e.target;\n      requestAnimationFrame(function () {\n        element.classList.add('hide');\n      }); // e.dataTransfer.dropEffect = \"move\";\n      // e.dataTransfer.setData(\"text/plain\", e.target.id+\"/\"+e.target.dataset.position); //e.target.id = ID von piece (pa1 usw.), position = current posistion \n      // console.log(e);\n    };\n\n    this.dragOverHandler = e => {\n      e.preventDefault(e);\n      requestAnimationFrame(function () {\n        e.target.classList.add('dragover');\n      }); // this.setState({dragover: 'dragover'}); \n    };\n\n    this.dragLeaveHandler = e => {\n      e.preventDefault();\n      console.log('dragleave', e); // requestAnimationFrame(function () {\n      // \te.target.target.classList.remove('dragover');\n      // }); \n    };\n\n    this.dragEndHandler = e => {\n      e.preventDefault();\n      let element = e.target;\n      requestAnimationFrame(function () {\n        element.classList.remove('hide');\n      });\n    };\n\n    const {\n      row,\n      column,\n      background,\n      piece,\n      onClick,\n      pieceClick\n    } = props;\n    this.state = {\n      row: row,\n      column: column,\n      background: background,\n      piece: piece,\n      onClick: onClick,\n      pieceClick: pieceClick,\n      dragover: ''\n    };\n  }\n\n  // dropHandler = (e) => {\n  // \te.preventDefault();\n  // \tlet data = e.dataTransfer.getData(\"text/plain\");\n  // \t\tlet strs = data.split(\"/\"); \n  // \tlet piece = strs[0];\n  // \tlet original_position = strs[1];\n  // \tlet new_position = e.target.id;\n  // \tif(e.target.localName==\"piece\"){\n  // \t\tif(piece==e.target.id){\n  // \t \t\tconsole.log(\"Same piece\");\n  // \t \t\treturn; \n  // \t \t}else{\n  // \t \t\t// console.log(piecesObj[original_position]);\n  // \t \t\t// console.log(piecesObj[convertPieceID(e.target.id)]);\n  // \t \t\tif(isOfSameColor(piecesObj[convertPieceID(piece)], piecesObj[convertPieceID(e.target.id)])){\n  // \t \t\t\tconsole.log(\"Same color\");\n  // \t \t\t\treturn;\n  // \t \t\t}else{\n  // \t \t\t\tcapturePiece(original_position, e.target.parentNode.id);\n  // \t \t\t\treturn;\n  // \t \t\t} \n  // \t \t}\n  // \t}\n  // \telse movePiece(original_position, new_position);\n  // \t// console.log(e.target.id);\n  // }\n  render() {\n    let {\n      row,\n      column,\n      background,\n      piece,\n      onClick,\n      pieceClick,\n      dragover\n    } = this.state;\n    let classes = 'square ' + background;\n    let position = [column, row];\n    let returnThis = piece ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes + dragover,\n      \"data-row\": row // onClick={onClick} \n      ,\n      \"data-column\": column,\n      onDragOver: this.dragOverHandler,\n      onDragLeave: this.dragLeaveHandler,\n      children: /*#__PURE__*/_jsxDEV(Piece, {\n        position: position // onClick={pieceClick} \t\n        ,\n        onClick: () => this.handlePieceClick(position),\n        onDragStart: this.dragStartHandler,\n        onDragEnd: this.dragEndHandler,\n        type: piece[0],\n        color: piece[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes + dragover,\n      onDragLeave: this.dragLeaveHandler,\n      onDragEnd: this.dragEndHandler,\n      onDragOver: this.dragOverHandler,\n      \"data-row\": row,\n      onClick: () => this.handleClick('hi'),\n      \"data-column\": column\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 6\n    }, this);\n    return returnThis;\n  }\n\n}\n\nexport default Square;","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Square/Square.js"],"names":["React","Piece","Square","Component","constructor","props","handleClick","e","console","log","handlePieceClick","dragStartHandler","target","dataTransfer","dropEffect","element","requestAnimationFrame","classList","add","dragOverHandler","preventDefault","dragLeaveHandler","dragEndHandler","remove","row","column","background","piece","onClick","pieceClick","state","dragover","render","classes","position","returnThis"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport './Square.css';\nimport Piece from '../Piece/Piece';\n// import Draggable from 'react-draggable';\n\nclass Square extends React.Component{\n\tconstructor(props){\n\t\tsuper(props); \n\t\tconst {row, column, background, piece, onClick, pieceClick} = props; \n\t\tthis.state = {\n\t\t\trow: row,\n\t\t\tcolumn: column,\n\t\t\tbackground: background,\n\t\t\tpiece: piece, \n\t\t\tonClick: onClick, \n\t\t\tpieceClick: pieceClick,\n\t\t\tdragover: ''\n\t\t}\n\t}\n\n\thandleClick = (e) => {\n\t\t// this.setState({background: 'white'}); \n\t\tconsole.log(`square ${e} clicked`);\n\t};\n\n\thandlePieceClick = (e) => {\n\t\tconsole.log(`piece ${e} clicked`);\n\t};\n\n\n\tdragStartHandler = (e) => {\n\t\t// e.preventDefault();\n\t\tconsole.log(e.target);\n\t\te.dataTransfer.dropEffect = \"move\";\n\t\tlet element = e.target;\n  \n\t\trequestAnimationFrame(function () {\n\t\t\telement.classList.add('hide');\n\t\t});\n\t\t // e.dataTransfer.dropEffect = \"move\";\n\t\t // e.dataTransfer.setData(\"text/plain\", e.target.id+\"/\"+e.target.dataset.position); //e.target.id = ID von piece (pa1 usw.), position = current posistion \n\t\t // console.log(e);\n\t};\n\n\tdragOverHandler = (e) => {\n\t\te.preventDefault(e);\n\t\trequestAnimationFrame(function () {\n\t\t\te.target.classList.add('dragover');\n\t\t});\n\t\t// this.setState({dragover: 'dragover'}); \n\t};\n\n\tdragLeaveHandler = (e) => {\n\t\te.preventDefault(); \n\t\tconsole.log('dragleave', e)\n\t\t// requestAnimationFrame(function () {\n\t\t// \te.target.target.classList.remove('dragover');\n\t\t// }); \n\t};\n\n\tdragEndHandler = (e) =>{\n\t\te.preventDefault();\n\t\tlet element = e.target;\n  \t  \trequestAnimationFrame(function () {\n\t    \telement.classList.remove('hide');\n\t  \t});\n\n\t};\n\n\t// dropHandler = (e) => {\n\t// \te.preventDefault();\n\t// \tlet data = e.dataTransfer.getData(\"text/plain\");\n // \t\tlet strs = data.split(\"/\"); \n\t// \tlet piece = strs[0];\n\t// \tlet original_position = strs[1];\n\t// \tlet new_position = e.target.id;\n\t// \tif(e.target.localName==\"piece\"){\n\t// \t\tif(piece==e.target.id){\n\t// \t \t\tconsole.log(\"Same piece\");\n\t// \t \t\treturn; \n\t// \t \t}else{\n\t// \t \t\t// console.log(piecesObj[original_position]);\n\t// \t \t\t// console.log(piecesObj[convertPieceID(e.target.id)]);\n\t// \t \t\tif(isOfSameColor(piecesObj[convertPieceID(piece)], piecesObj[convertPieceID(e.target.id)])){\n\t// \t \t\t\tconsole.log(\"Same color\");\n\t// \t \t\t\treturn;\n\t// \t \t\t}else{\n\t// \t \t\t\tcapturePiece(original_position, e.target.parentNode.id);\n\t// \t \t\t\treturn;\n\t// \t \t\t} \n\t// \t \t}\n\t// \t}\n\t// \telse movePiece(original_position, new_position);\n\t// \t// console.log(e.target.id);\n\t// }\n\n\trender(){\n\t\tlet {row, column, background, piece, onClick, pieceClick, dragover} = this.state; \n\t\tlet classes = 'square '+background;\n\t\tlet position = [column, row];\n\n\t\tlet returnThis = piece \n\t\t\t? \n\t\t\t<div className={classes+dragover} data-row={row} \n\t\t\t\t// onClick={onClick} \n\t\t\t\tdata-column={column}\n\t\t\t\tonDragOver={this.dragOverHandler}\n\t\t\t\tonDragLeave={this.dragLeaveHandler}\n\t\t\t\t> \n\t\t\t\t<Piece position={position} \n\t\t\t\t\t// onClick={pieceClick} \t\n\t\t\t\t\tonClick={() => this.handlePieceClick(position)}\n\t\t\t\t\tonDragStart={this.dragStartHandler}\n\t\t\t\t\tonDragEnd={this.dragEndHandler}\n\t\t\t\t\ttype={piece[0]} color={piece[1]} /> \n\t\t\t</div>\n\t\t\t: <div className={classes+dragover} onDragLeave={this.dragLeaveHandler} onDragEnd={this.dragEndHandler} onDragOver={this.dragOverHandler} data-row={row} onClick={()=>this.handleClick('hi')} data-column={column} />;\n\t\treturn returnThis;\n\t}\n\n}\n\nexport default Square; "]},"metadata":{},"sourceType":"module"}