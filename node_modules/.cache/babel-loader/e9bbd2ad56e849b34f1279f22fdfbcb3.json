{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Moves/Moves.js\";\nimport React, { Component } from 'react';\nimport './Moves.css'; // let boardConv = [];\t\n\nclass Moves extends Component {\n  // moveHistory: [[from, to], [from, to], [from, to], ...]\n  constructor(props) {\n    super(props);\n    let {\n      moveHistory\n    } = props;\n    this.state = {\n      render: []\n    };\n  }\n\n  addMove(white, black) {\n    let old = [...this.state.render];\n  }\n\n  render() {\n    let moveHistory = this.props.moveHistory; // let lines; \n    // for(let i = 0; i<moveHistory.length;i++){\n    // }\n\n    let white = /*#__PURE__*/React.createElement('div', {\n      className: 'move_white'\n    }, 'e4');\n    let black = /*#__PURE__*/React.createElement('div', {\n      className: 'move_black'\n    }, 'e5');\n    let row = /*#__PURE__*/React.createElement('div', {\n      className: 'move_number'\n    }, ['1', white, black]);\n    console.log(moveHistory); // let lines = this.props.moveHistory.map((element, index) => \n    // \tindex%2 === 0 ? \n    // \t\t<div className='moves_row'><div className='move_number'>{index}</div>  \n    // \t\t<div className='move_white'>{element[0]}&rarr;{element[1]}</div>\n    // \t\t<div className='move_black'></div></div>\n    // \t\t:\n    // \t\t<div className='moves_row'><div className='move_number'>{index}</div>  \n    // \t\t<div className='move_white'>{element[0]}&rarr;{element[1]}</div>\n    // \t\t<div className='move_black'></div></div>\n    // \t);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"moves\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"top_row\",\n        children: \" Moves \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"moves_table\",\n        children: [\" \", row]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Moves;","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Moves/Moves.js"],"names":["React","Component","Moves","constructor","props","moveHistory","state","render","addMove","white","black","old","createElement","className","row","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP,C,CAGA;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAE7B;AAGAE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,QAAI;AAACC,MAAAA;AAAD,QAAgBD,KAApB;AACA,SAAKE,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGA;;AAEDC,EAAAA,OAAO,CAACC,KAAD,EAAQC,KAAR,EAAc;AACpB,QAAIC,GAAG,GAAG,CAAC,GAAG,KAAKL,KAAL,CAAWC,MAAf,CAAV;AACA;;AAEDA,EAAAA,MAAM,GAAE;AACP,QAAIF,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA7B,CADO,CAEP;AACA;AAEA;;AAEA,QAAII,KAAK,gBAAGT,KAAK,CAACY,aAAN,CAAoB,KAApB,EAA2B;AAACC,MAAAA,SAAS,EAAC;AAAX,KAA3B,EAAoD,IAApD,CAAZ;AACA,QAAIH,KAAK,gBAAGV,KAAK,CAACY,aAAN,CAAoB,KAApB,EAA2B;AAACC,MAAAA,SAAS,EAAC;AAAX,KAA3B,EAAoD,IAApD,CAAZ;AACA,QAAIC,GAAG,gBAAGd,KAAK,CAACY,aAAN,CAAoB,KAApB,EAA2B;AAACC,MAAAA,SAAS,EAAC;AAAX,KAA3B,EAAsD,CAAC,GAAD,EAAMJ,KAAN,EAAaC,KAAb,CAAtD,CAAV;AAGAK,IAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ,EAZO,CAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,wBACC;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA,8BACC;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,EAAE,EAAC,aAAR;AAAA,wBAAwBS,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAYA;;AAtD4B;;AAyD9B,eAAeZ,KAAf","sourcesContent":["import React, {Component} from 'react'; \nimport './Moves.css';\n\n\n// let boardConv = [];\t\n\nclass Moves extends Component {\n\n\t// moveHistory: [[from, to], [from, to], [from, to], ...]\n\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tlet {moveHistory} = props; \n\t\tthis.state = {\n\t\t\t render: []\n\t\t}\n\t}\n\n\taddMove(white, black){\n\t\tlet old = [...this.state.render]; \n\t}\n\n\trender(){\n\t\tlet moveHistory = this.props.moveHistory; \n\t\t// let lines; \n\t\t// for(let i = 0; i<moveHistory.length;i++){\n\n\t\t// }\n\n\t\tlet white = React.createElement('div', {className:'move_white'},'e4');\n\t\tlet black = React.createElement('div', {className:'move_black'},'e5');\n\t\tlet row = React.createElement('div', {className:'move_number'}, ['1', white, black]); \n\n\n\t\tconsole.log(moveHistory);\n\t\t// let lines = this.props.moveHistory.map((element, index) => \n\t\t// \tindex%2 === 0 ? \n\t\t// \t\t<div className='moves_row'><div className='move_number'>{index}</div>  \n\t\t// \t\t<div className='move_white'>{element[0]}&rarr;{element[1]}</div>\n\t\t// \t\t<div className='move_black'></div></div>\n\t\t// \t\t:\n\t\t// \t\t<div className='moves_row'><div className='move_number'>{index}</div>  \n\t\t// \t\t<div className='move_white'>{element[0]}&rarr;{element[1]}</div>\n\t\t// \t\t<div className='move_black'></div></div>\n\n\t\t// \t);\n\n\t\treturn (\n\t\t\t<div id=\"moves\"> \n\t\t\t\t<div id=\"top_row\"> Moves </div>\n\t\t\t\t<div id=\"moves_table\"> {row}\n\t\t\t\t\t{/*\n\t\t\t\t\t<div className=\"move_number\">1</div> <div className=\"move_white\"> e4 </div> <div className=\"move_black\"> e5 </div>\n\t\t\t\t\t<div className=\"move_number\">2</div> <div className=\"move_white\"> e4 </div> <div className=\"move_black\"> e5 </div>\n\t\t\t\t\t<div className=\"move_number\">3</div> <div className=\"move_white\"> e4 </div> <div className=\"move_black\"> e5 </div>\n\t\t\t\t\t*/}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Moves; "]},"metadata":{},"sourceType":"module"}