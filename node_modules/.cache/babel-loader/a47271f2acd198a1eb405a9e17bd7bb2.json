{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Piece/Piece.js\";\nimport React from 'react';\nimport './Piece.css';\nimport Draggable from 'react-draggable';\nconst typeConv = {\n  1: 'pawn',\n  2: 'bishop',\n  3: 'knight',\n  4: 'rook',\n  5: 'queen',\n  6: 'king'\n}; // <Piece position={index} \n// \t\t\t// onClick={() => availableMoves(piece[0])}\n// \t\t\tonDragStart={dragStartHandler}\n// \t\t\tonDragEnd={dragEndHandler}\n// \t\t\tpiece={piece} \n\nlet colorConv = number => {\n  if (number > 0) return 'white';else return 'black';\n};\n\nconst dragStartHandler = e => {\n  console.log('hi');\n  e.dataTransfer.dropEffect = \"move\";\n  e.dataTransfer.setData(\"text/plain\", '55'); // requestAnimationFrame(function () {\n  // \te.target.classList.add('hide');\n  // });\n};\n\nconst dragEndHandler = e => {\n  e.preventDefault(); // let element = e.target;\n  //   \trequestAnimationFrame(function () {\n  //    \telement.classList.remove('hide');\n  //  \t});\n};\n\nconst Piece = ({\n  position,\n  piece,\n  onClick\n}) => {\n  let pieceClass = `piece ${typeConv[Math.abs(piece)]} ${colorConv(piece)}`; // let key = `p${position}`;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: pieceClass,\n    onDragStart: dragStartHandler,\n    onClick: () => onClick(position),\n    onDragEnd: () => dragEndHandler,\n    draggable: \"true\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Piece;\nexport default Piece;\n\nvar _c;\n\n$RefreshReg$(_c, \"Piece\");","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Piece/Piece.js"],"names":["React","Draggable","typeConv","colorConv","number","dragStartHandler","e","console","log","dataTransfer","dropEffect","setData","dragEndHandler","preventDefault","Piece","position","piece","onClick","pieceClass","Math","abs"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,MAAMC,QAAQ,GAAG;AAChB,KAAG,MADa;AACL,KAAE,QADG;AACO,KAAE,QADT;AACmB,KAAE,MADrB;AAC6B,KAAE,OAD/B;AACwC,KAAE;AAD1C,CAAjB,C,CAIC;AACA;AACA;AACA;AACA;;AAED,IAAIC,SAAS,GAAGC,MAAM,IAAI;AACzB,MAAGA,MAAM,GAAC,CAAV,EAAa,OAAO,OAAP,CAAb,KACK,OAAO,OAAP;AACL,CAHD;;AAKA,MAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAF,EAAAA,CAAC,CAACG,YAAF,CAAeC,UAAf,GAA4B,MAA5B;AACAJ,EAAAA,CAAC,CAACG,YAAF,CAAeE,OAAf,CAAuB,YAAvB,EAAqC,IAArC,EAH+B,CAI/B;AACA;AACA;AACA,CAPD;;AASA,MAAMC,cAAc,GAAIN,CAAD,IAAM;AAC5BA,EAAAA,CAAC,CAACO,cAAF,GAD4B,CAE5B;AACA;AACA;AACA;AACA,CAND;;AAQA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAAgC;AAC7C,MAAIC,UAAU,GAAI,SAAQhB,QAAQ,CAACiB,IAAI,CAACC,GAAL,CAASJ,KAAT,CAAD,CAAkB,IAAGb,SAAS,CAACa,KAAD,CAAQ,EAAxE,CAD6C,CAE7C;;AACA,sBAAO;AAAK,IAAA,SAAS,EAAEE,UAAhB;AAA4B,IAAA,WAAW,EAAEb,gBAAzC;AAA2D,IAAA,OAAO,EAAE,MAAMY,OAAO,CAACF,QAAD,CAAjF;AAA6F,IAAA,SAAS,EAAE,MAAIH,cAA5G;AAA4H,IAAA,SAAS,EAAC;AAAtI;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAJD;;KAAME,K;AAMN,eAAeA,KAAf","sourcesContent":["import React from 'react'; \nimport './Piece.css';\nimport Draggable from 'react-draggable';\n\nconst typeConv = {\n\t1: 'pawn', 2:'bishop', 3:'knight', 4:'rook', 5:'queen', 6:'king'\n}\n\n\t// <Piece position={index} \n\t// \t\t\t// onClick={() => availableMoves(piece[0])}\n\t// \t\t\tonDragStart={dragStartHandler}\n\t// \t\t\tonDragEnd={dragEndHandler}\n\t// \t\t\tpiece={piece} \n\nlet colorConv = number => {\n\tif(number>0) return 'white';\n\telse return 'black'; \n}\n\nconst dragStartHandler = (e) => {\n\tconsole.log('hi');\n\te.dataTransfer.dropEffect = \"move\";\n\te.dataTransfer.setData(\"text/plain\", '55'); \n\t// requestAnimationFrame(function () {\n\t// \te.target.classList.add('hide');\n\t// });\n}\n\nconst dragEndHandler = (e) =>{\n\te.preventDefault();\n\t// let element = e.target;\n\t//   \trequestAnimationFrame(function () {\n //    \telement.classList.remove('hide');\n //  \t});\n}\n\nconst Piece = ({position, piece, onClick}) => {\n\tlet pieceClass = `piece ${typeConv[Math.abs(piece)]} ${colorConv(piece)}`;\n\t// let key = `p${position}`;\n\treturn <div className={pieceClass} onDragStart={dragStartHandler} onClick={() => onClick(position)} onDragEnd={()=>dragEndHandler} draggable=\"true\" />;\n}\n\nexport default Piece; "]},"metadata":{},"sourceType":"module"}