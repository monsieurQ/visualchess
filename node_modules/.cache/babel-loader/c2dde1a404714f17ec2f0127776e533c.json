{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/chess/front/src/components/ToggleTextButton/ToggleTextButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ToggleTextButton.css';\n\nconst ToggleTextButton = ({\n  text,\n  onClick,\n  initialText = 0\n}) => {\n  _s();\n\n  const [display, setDisplay] = useState(initialText);\n\n  function handleClick() {\n    let oldDisplay = display;\n    setDisplay(display === 0 ? 1 : 0);\n    onClick(oldDisplay);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    onClick: handleClick,\n    className: \"toggleTextButton\",\n    children: [\" \", text[display], \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ToggleTextButton, \"MyILfetXhd59x8y8onJoNgWa6+A=\");\n\n_c = ToggleTextButton;\nexport default ToggleTextButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleTextButton\");","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/chess/front/src/components/ToggleTextButton/ToggleTextButton.js"],"names":["React","useState","ToggleTextButton","text","onClick","initialText","display","setDisplay","handleClick","oldDisplay"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAO,wBAAP;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA,WAAW,GAAC;AAA5B,CAAD,KAAoC;AAAA;;AAC5D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACI,WAAD,CAAtC;;AAEA,WAASG,WAAT,GAAsB;AACrB,QAAIC,UAAU,GAAGH,OAAjB;AACAC,IAAAA,UAAU,CAACD,OAAO,KAAG,CAAV,GAAY,CAAZ,GAAc,CAAf,CAAV;AACAF,IAAAA,OAAO,CAACK,UAAD,CAAP;AACA;;AAED,sBAAQ;AAAM,IAAA,OAAO,EAAED,WAAf;AAA4B,IAAA,SAAS,EAAC,kBAAtC;AAAA,oBAA2DL,IAAI,CAACG,OAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACA,CAVD;;GAAMJ,gB;;KAAAA,gB;AAYN,eAAeA,gBAAf","sourcesContent":["import React,{ useState } from 'react'; \nimport './ToggleTextButton.css';\n\nconst ToggleTextButton = ({text, onClick, initialText=0}) => {\n\tconst [display, setDisplay] = useState(initialText);\n\n\tfunction handleClick(){\n\t\tlet oldDisplay = display; \n\t\tsetDisplay(display===0?1:0); \n\t\tonClick(oldDisplay); \n\t}\n\n\treturn (<span onClick={handleClick} className='toggleTextButton'> {text[display]} </span>);\n}\n\nexport default ToggleTextButton; "]},"metadata":{},"sourceType":"module"}