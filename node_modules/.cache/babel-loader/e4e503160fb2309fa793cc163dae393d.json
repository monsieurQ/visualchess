{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Moves/Moves.js\";\nimport React, { Component } from 'react';\nimport './Moves.css'; // let boardConv = [];\t\n\nclass Moves extends Component {\n  // moveHistory: [[from, to], [from, to], [from, to], ...]\n  constructor(props) {\n    super(props);\n    let {\n      moveHistory\n    } = props;\n    this.state = {\n      render: [],\n      playedMoves: 0\n    };\n  }\n\n  addMove(white, black) {\n    let old = [...this.state.render];\n  }\n\n  numberOfRows(length) {\n    return Math.ceil(length / 2);\n  }\n\n  createRow(moves, number) {// let row_number = React.createElement('div', {className:'move_number'}, number);\n    // let white = React.createElement('div', {className:'move_white'},moves[0]);\n    // let black = moves%2 === 0\n    // \t? React.createElement('div', {className: 'move_black'}); \n    // \t: React.createElement('div', {className: 'move_black'}, moves[1]);\n    // return React.createElement('div', {className:'moves_row'}, [row_number, white, black]); \n  }\n\n  render() {\n    let moveHistory = this.props.moveHistory; // // let lines; \n    // // for(let i = 0; i<moveHistory.length;i++){\n    // // }\n    // let render = []; \n    // for(let i=0;i<this.numberOfRows(moveHistory.length);i++){\n    // }\n    // let white = React.createElement('div', {className:'move_white'},'e4');\n    // let black = React.createElement('div', {className:'move_black'},'e5');\n    // let number = React.createElement('div', {className:'move_number'}, '1');\n    // let row = React.createElement('div', {className:'moves_row'}, [number, white, black]); \n    // console.log('#of Rows: ', this.numberOfRows(moveHistory.length));\n    // console.log(moveHistory);\n    // let lines = this.props.moveHistory.map((element, index) => \n    // \tindex%2 === 0 ? \n    // \t\t<div className='moves_row'><div className='move_number'>{index}</div>  \n    // \t\t<div className='move_white'>{element[0]}&rarr;{element[1]}</div>\n    // \t\t<div className='move_black'></div></div>\n    // \t\t:\n    // \t\t<div className='moves_row'><div className='move_number'>{index}</div>  \n    // \t\t<div className='move_white'>{element[0]}&rarr;{element[1]}</div>\n    // \t\t<div className='move_black'></div></div>\n    // \t);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"moves\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"top_row\",\n        children: \" Moves \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"moves_table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Moves;","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Moves/Moves.js"],"names":["React","Component","Moves","constructor","props","moveHistory","state","render","playedMoves","addMove","white","black","old","numberOfRows","length","Math","ceil","createRow","moves","number"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP,C,CAGA;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAE7B;AAGAE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,QAAI;AAACC,MAAAA;AAAD,QAAgBD,KAApB;AACA,SAAKE,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAIA;;AAEDC,EAAAA,OAAO,CAACC,KAAD,EAAQC,KAAR,EAAc;AACpB,QAAIC,GAAG,GAAG,CAAC,GAAG,KAAKN,KAAL,CAAWC,MAAf,CAAV;AACA;;AAEDM,EAAAA,YAAY,CAACC,MAAD,EAAQ;AACnB,WAAOC,IAAI,CAACC,IAAL,CAAUF,MAAM,GAAC,CAAjB,CAAP;AACA;;AAEDG,EAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAe,CACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEDZ,EAAAA,MAAM,GAAE;AACP,QAAIF,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA7B,CADO,CAIP;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,wBACC;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA,8BACC;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAYA;;AA7E4B;;AAgF9B,eAAeH,KAAf","sourcesContent":["import React, {Component} from 'react'; \nimport './Moves.css';\n\n\n// let boardConv = [];\t\n\nclass Moves extends Component {\n\n\t// moveHistory: [[from, to], [from, to], [from, to], ...]\n\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tlet {moveHistory} = props; \n\t\tthis.state = {\n\t\t\t render: [],\n\t\t\t playedMoves: 0\n\t\t}\n\t}\n\n\taddMove(white, black){\n\t\tlet old = [...this.state.render]; \n\t}\n\n\tnumberOfRows(length){\n\t\treturn Math.ceil(length/2);\n\t}\n\n\tcreateRow(moves, number){\n\t\t// let row_number = React.createElement('div', {className:'move_number'}, number);\n\t\t// let white = React.createElement('div', {className:'move_white'},moves[0]);\n\t\t// let black = moves%2 === 0\n\t\t// \t? React.createElement('div', {className: 'move_black'}); \n\t\t// \t: React.createElement('div', {className: 'move_black'}, moves[1]);\n\t\t// return React.createElement('div', {className:'moves_row'}, [row_number, white, black]); \n\t}\n\n\trender(){\n\t\tlet moveHistory = this.props.moveHistory; \n\n\n\t\t// // let lines; \n\t\t// // for(let i = 0; i<moveHistory.length;i++){\n\n\t\t// // }\n\t\t// let render = []; \n\t\t// for(let i=0;i<this.numberOfRows(moveHistory.length);i++){\n\n\t\t// }\n\t\t// let white = React.createElement('div', {className:'move_white'},'e4');\n\t\t// let black = React.createElement('div', {className:'move_black'},'e5');\n\t\t// let number = React.createElement('div', {className:'move_number'}, '1');\n\n\t\t// let row = React.createElement('div', {className:'moves_row'}, [number, white, black]); \n\n\t\t// console.log('#of Rows: ', this.numberOfRows(moveHistory.length));\n\n\n\t\t// console.log(moveHistory);\n\t\t// let lines = this.props.moveHistory.map((element, index) => \n\t\t// \tindex%2 === 0 ? \n\t\t// \t\t<div className='moves_row'><div className='move_number'>{index}</div>  \n\t\t// \t\t<div className='move_white'>{element[0]}&rarr;{element[1]}</div>\n\t\t// \t\t<div className='move_black'></div></div>\n\t\t// \t\t:\n\t\t// \t\t<div className='moves_row'><div className='move_number'>{index}</div>  \n\t\t// \t\t<div className='move_white'>{element[0]}&rarr;{element[1]}</div>\n\t\t// \t\t<div className='move_black'></div></div>\n\n\t\t// \t);\n\n\t\treturn (\n\t\t\t<div id=\"moves\"> \n\t\t\t\t<div id=\"top_row\"> Moves </div>\n\t\t\t\t<div id=\"moves_table\">\n\t\t\t\t\t\n\t\t\t\t\t{/*<div className=\"move_number\">1</div> <div className=\"move_white\"> e4 </div> <div className=\"move_black\"> e5 </div>\n\t\t\t\t\t<div className=\"move_number\">2</div> <div className=\"move_white\"> e4 </div> <div className=\"move_black\"> e5 </div>\n\t\t\t\t\t<div className=\"move_number\">3</div> <div className=\"move_white\"> e4 </div> <div className=\"move_black\"> e5 </div>\n\t\t\t\t\t<div className=\"move_number\">4</div> <div className=\"move_white\"> e6 </div>*/}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Moves; "]},"metadata":{},"sourceType":"module"}