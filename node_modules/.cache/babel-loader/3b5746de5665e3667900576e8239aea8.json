{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Moves/Moves.js\";\nimport React, { Component } from 'react';\nimport './Moves.css';\nlet columnConversion = {\n  1: 'a',\n  2: 'b',\n  3: 'c',\n  4: 'd',\n  5: 'e',\n  6: 'f',\n  7: 'g',\n  8: 'h'\n};\nlet typeConversion = ['', 'B', 'N', 'R', 'Q', 'K']; // TYPES \n// PAWN - 0 \n// BISHOP - 1 \n// KNIGHT - 2 \n// ROOK - 3 \n// QUEEN - 4 \n// KING - 5\n\nclass Moves extends Component {\n  convertMove(move) {\n    let str = '' + move;\n    let r = Number(str.charAt(0));\n    let c = columnConversion[Number(str.charAt(1))];\n    return '' + c + r;\n  }\n\n  constructor(props) {\n    super(props);\n    let {\n      lastMove,\n      onClick\n    } = props; // this.newMoveBlack = this.newMoveBlack.bind(this);\n\n    this.state = {\n      render: {},\n      moves_white: [],\n      moves_black: [],\n      moveDisplay: 1\n    };\n  }\n\n  numberOfRows(length) {\n    return Math.ceil(length / 2);\n  }\n\n  newMoveWhite(move_number, type, move, internal_move) {\n    let row_number = /*#__PURE__*/React.createElement('div', {\n      className: 'move_number',\n      key: `move_number${move_number}`\n    }, move_number);\n    let white = /*#__PURE__*/React.createElement('div', {\n      className: 'move_white',\n      key: `move_white${move_number}`,\n      onClick: () => this.props.onClick(1, internal_move)\n    }, typeConversion[type] + this.convertMove(move));\n    return [row_number, white];\n  }\n\n  newMoveBlack(move_number, type, move, internal_move) {\n    return /*#__PURE__*/React.createElement('div', {\n      className: 'move_black',\n      key: `move_black${move_number}`,\n      onClick: () => this.props.onClick(-1, internal_move)\n    }, typeConversion[type] + this.convertMove(move));\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let {\n      lastMove\n    } = props;\n    if (!lastMove || lastMove === undefined) return null;\n    let [color, type, move] = lastMove;\n    let moves_white = state.moves_white;\n    let moves_black = state.moves_black;\n\n    if (color === 1) {\n      //wnite\n      moves_white.push({\n        type: type,\n        move: move\n      });\n    } else if (color === -1) {\n      //black \n      moves_black.push({\n        type: type,\n        move: move\n      });\n    }\n\n    return {\n      moves_white: moves_white,\n      moves_black: moves_black\n    };\n  }\n\n  render() {\n    let moves_white = this.state.moves_white;\n    let moves_black = this.state.moves_black;\n    let render = [];\n    let c = 1;\n    let i = 0;\n    moves_white.forEach((element, index) => {\n      render.push(this.newMoveWhite(c, element.type, element.move, i));\n      i++;\n\n      if (moves_black[index]) {\n        render.push(this.newMoveBlack(c, moves_black[index].type, moves_black[index].move, i));\n        i++;\n      }\n\n      c++;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"moves\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"top_row\",\n        children: \" Moves \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"moves_table\",\n        children: render\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Moves;","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Moves/Moves.js"],"names":["React","Component","columnConversion","typeConversion","Moves","convertMove","move","str","r","Number","charAt","c","constructor","props","lastMove","onClick","state","render","moves_white","moves_black","moveDisplay","numberOfRows","length","Math","ceil","newMoveWhite","move_number","type","internal_move","row_number","createElement","className","key","white","newMoveBlack","getDerivedStateFromProps","undefined","color","push","i","forEach","element","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'; \nimport './Moves.css';\n\n\nlet columnConversion =  {1:'a', 2:'b', 3:'c', 4:'d', 5:'e', 6:'f', 7:'g', 8:'h'};\nlet typeConversion = ['','B','N','R','Q','K'];\n\n// TYPES \n// PAWN - 0 \n// BISHOP - 1 \n// KNIGHT - 2 \n// ROOK - 3 \n// QUEEN - 4 \n// KING - 5\n\nclass Moves extends Component {\n\n\n\tconvertMove(move){\n\t\tlet str = ''+move; \n\t\tlet r = Number(str.charAt(0)); \n\t\tlet c = columnConversion[Number(str.charAt(1))];\n\t\treturn ''+c+r;\n\t}\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tlet {lastMove, onClick} = props;  \n\t\t// this.newMoveBlack = this.newMoveBlack.bind(this);\n\t\tthis.state = {\n\t\t\t render: {},\n\t\t\t moves_white: [],\n\t\t\t moves_black: [],\n\t\t\t moveDisplay: 1\n\t\t}\n\t}\n\n\tnumberOfRows(length){\n\t\treturn Math.ceil(length/2);\n\t}\n\n\tnewMoveWhite(move_number, type, move, internal_move){\n\t\tlet row_number = React.createElement('div', {className:'move_number',key:`move_number${move_number}`}, move_number);\n\t\tlet white = React.createElement('div', {className:'move_white', key: `move_white${move_number}`, onClick:()=>this.props.onClick(1, internal_move)},typeConversion[type]+this.convertMove(move));\n\t\treturn [row_number, white];\n\t}\n\tnewMoveBlack(move_number, type, move, internal_move){\n\t\treturn React.createElement('div', {className:'move_black', key: `move_black${move_number}`, onClick:()=>this.props.onClick(-1, internal_move)},typeConversion[type]+this.convertMove(move));\n\t\t\n\t}\n\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\tlet {lastMove} = props; \n\t\tif(!lastMove||lastMove===undefined) return null;\n\t\tlet [color, type, move] = lastMove;\n\n\t\tlet moves_white = state.moves_white; \n\t\tlet moves_black = state.moves_black;\n\n\n\t\tif(color===1){ //wnite\n\t\t\tmoves_white.push({type: type, move: move});\n\t\t}else if(color===-1){ //black \n\t\t\tmoves_black.push({type:type, move:move});\n\t\t}\n\t\treturn {moves_white: moves_white, moves_black: moves_black}\n\t}\t\t\n\n\trender(){\n\t\tlet moves_white = this.state.moves_white;\n\t\tlet moves_black = this.state.moves_black;\n\t\tlet render = []; \n\t\tlet c = 1; \n\t\tlet i = 0; \n\n\t\tmoves_white.forEach((element, index)=>{\n\t\t\trender.push(this.newMoveWhite(c, element.type, element.move, i));\n\t\t\ti++;\n\t\t\tif(moves_black[index]){\n\t\t\t\trender.push(this.newMoveBlack(c, moves_black[index].type, moves_black[index].move, i));\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tc++;\n\t\t});\n\n\t\treturn (\n\t\t\t<div id=\"moves\"> \n\t\t\t\t<div id=\"top_row\"> Moves </div>\n\t\t\t\t<div id=\"moves_table\"> \n\t\t\t\t\t{render\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Moves; "]},"metadata":{},"sourceType":"module"}