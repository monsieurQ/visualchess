{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Square/Square.js\";\nimport React from 'react';\nimport './Square.css';\nimport Piece from '../Piece/Piece'; // import Draggable from 'react-draggable';\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      // this.setState({background: 'white'}); \n      console.log(`square ${e} clicked`);\n    };\n\n    this.handlePieceClick = e => {\n      console.log(`piece ${e} clicked`);\n    };\n\n    this.dragStartHandler = e => {\n      console.log(e);\n      e.dataTransfer.dropEffect = \"move\";\n      e.dataTransfer.setData(\"text/plain\", e.target.id + \"/\" + e.target.dataset.position); //e.target.id = ID von piece (pa1 usw.), position = current posistion \n      // console.log(e);\n    };\n\n    this.dropHandler = e => {\n      e.preventDefault();\n      let data = e.dataTransfer.getData(\"text/plain\");\n      let strs = data.split(\"/\");\n      let piece = strs[0];\n      let original_position = strs[1];\n      let new_position = e.target.id;\n\n      if (e.target.localName == \"piece\") {\n        if (piece == e.target.id) {\n          console.log(\"Same piece\");\n          return;\n        } else {\n          // console.log(piecesObj[original_position]);\n          // console.log(piecesObj[convertPieceID(e.target.id)]);\n          if (isOfSameColor(piecesObj[convertPieceID(piece)], piecesObj[convertPieceID(e.target.id)])) {\n            console.log(\"Same color\");\n            return;\n          } else {\n            capturePiece(original_position, e.target.parentNode.id);\n            return;\n          }\n        }\n      } else movePiece(original_position, new_position); // console.log(e.target.id);\n\n    };\n\n    const {\n      row,\n      column,\n      background,\n      piece: _piece,\n      onClick,\n      pieceClick\n    } = props;\n    this.state = {\n      row: row,\n      column: column,\n      background: background,\n      piece: _piece,\n      onClick: onClick,\n      pieceClick: pieceClick\n    };\n  }\n\n  render() {\n    let {\n      row,\n      column,\n      background,\n      piece,\n      onClick,\n      pieceClick\n    } = this.state;\n    let classes = 'square ' + background;\n    let position = [column, row];\n    let returnThis = piece ?\n    /*#__PURE__*/\n\n    /*<Draggable>\n    \t<div className={classes} data-row={row} \n    \t// onClick={onClick} \n    \tdata-column={column}> \n    \t\t<Piece position={position} \n    \t\t// onClick={pieceClick} \t\n    \t\tonClick={() => this.handlePieceClick(position)}\n    \t\ttype={piece[0]} color={piece[1]} /> \n    \t</div>\n    </Draggable>*/\n    _jsxDEV(\"div\", {\n      className: classes,\n      \"data-row\": row // onClick={onClick} \n      ,\n      \"data-column\": column,\n      children: /*#__PURE__*/_jsxDEV(Piece, {\n        position: position // onClick={pieceClick} \t\n        ,\n        onClick: () => this.handlePieceClick(position),\n        onDragStart: () => this.dragStartHandler(position),\n        type: piece[0],\n        draggable: true,\n        color: piece[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes,\n      \"data-row\": row,\n      onClick: () => this.handleClick('hi'),\n      \"data-column\": column\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }, this);\n    return returnThis;\n  }\n\n}\n\nexport default Square;","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Square/Square.js"],"names":["React","Piece","Square","Component","constructor","props","handleClick","e","console","log","handlePieceClick","dragStartHandler","dataTransfer","dropEffect","setData","target","id","dataset","position","dropHandler","preventDefault","data","getData","strs","split","piece","original_position","new_position","localName","isOfSameColor","piecesObj","convertPieceID","capturePiece","parentNode","movePiece","row","column","background","onClick","pieceClick","state","render","classes","returnThis"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport './Square.css';\nimport Piece from '../Piece/Piece';\n// import Draggable from 'react-draggable';\n\nclass Square extends React.Component{\n\tconstructor(props){\n\t\tsuper(props); \n\t\tconst {row, column, background, piece, onClick, pieceClick} = props; \n\t\tthis.state = {\n\t\t\trow: row,\n\t\t\tcolumn: column,\n\t\t\tbackground: background,\n\t\t\tpiece: piece, \n\t\t\tonClick: onClick, \n\t\t\tpieceClick: pieceClick,\n\t\t}\n\t}\n\n\thandleClick = (e) => {\n\t\t// this.setState({background: 'white'}); \n\t\tconsole.log(`square ${e} clicked`);\n\t};\n\n\thandlePieceClick = (e) => {\n\t\tconsole.log(`piece ${e} clicked`);\n\t};\n\n\n\tdragStartHandler = (e) => {\n\t\tconsole.log(e);\n\t\t e.dataTransfer.dropEffect = \"move\";\n\t\t e.dataTransfer.setData(\"text/plain\", e.target.id+\"/\"+e.target.dataset.position); //e.target.id = ID von piece (pa1 usw.), position = current posistion \n\t\t // console.log(e);\n\t};\n\n\tdropHandler = (e) => {\n\t\te.preventDefault();\n\t\tlet data = e.dataTransfer.getData(\"text/plain\");\n \t\tlet strs = data.split(\"/\"); \n\t\tlet piece = strs[0];\n\t\tlet original_position = strs[1];\n\t\tlet new_position = e.target.id;\n\t\tif(e.target.localName==\"piece\"){\n\t\t\tif(piece==e.target.id){\n\t\t \t\tconsole.log(\"Same piece\");\n\t\t \t\treturn; \n\t\t \t}else{\n\t\t \t\t// console.log(piecesObj[original_position]);\n\t\t \t\t// console.log(piecesObj[convertPieceID(e.target.id)]);\n\t\t \t\tif(isOfSameColor(piecesObj[convertPieceID(piece)], piecesObj[convertPieceID(e.target.id)])){\n\t\t \t\t\tconsole.log(\"Same color\");\n\t\t \t\t\treturn;\n\t\t \t\t}else{\n\t\t \t\t\tcapturePiece(original_position, e.target.parentNode.id);\n\t\t \t\t\treturn;\n\t\t \t\t} \n\t\t \t}\n\t\t}\n\t\telse movePiece(original_position, new_position);\n\t\t// console.log(e.target.id);\n\t}\n\n\trender(){\n\t\tlet {row, column, background, piece, onClick, pieceClick} = this.state; \n\t\tlet classes = 'square '+background;\n\t\tlet position = [column, row];\n\t\tlet returnThis = piece \n\t\t\t? \n\t\t\t/*<Draggable>\n\t\t\t\t<div className={classes} data-row={row} \n\t\t\t\t// onClick={onClick} \n\t\t\t\tdata-column={column}> \n\t\t\t\t\t<Piece position={position} \n\t\t\t\t\t// onClick={pieceClick} \t\n\t\t\t\t\tonClick={() => this.handlePieceClick(position)}\n\t\t\t\t\ttype={piece[0]} color={piece[1]} /> \n\t\t\t\t</div>\n\t\t\t</Draggable>*/\n\t\t\t<div className={classes} data-row={row} \n\t\t\t// onClick={onClick} \n\t\t\t\tdata-column={column}> \n\t\t\t\t<Piece position={position} \n\t\t\t\t\t// onClick={pieceClick} \t\n\t\t\t\t\tonClick={() => this.handlePieceClick(position)}\n\t\t\t\t\tonDragStart={() => this.dragStartHandler(position)}\n\t\t\t\t\ttype={piece[0]} draggable={true} color={piece[1]} /> \n\t\t\t</div>\n\t\t\t: <div className={classes} data-row={row} onClick={()=>this.handleClick('hi')} data-column={column} />;\n\t\treturn returnThis;\n\t}\n\n}\n\nexport default Square; "]},"metadata":{},"sourceType":"module"}