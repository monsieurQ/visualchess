{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/ChessReact/chess/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react'; // import Board from './components/Board/Board';\n\nimport Moves from './components/Moves/Moves';\nimport Square from './components/Square/Square';\nimport Squares from './components/Squares/Squares'; // TYPES (negative values for black)\n// PAWN - 1 \n// BISHOP - 2 \n// KNIGHT - 3 \n// ROOK - 4\n// QUEEN - 5 \n// KING - 6 \n\nconst startingPosition = [-4, -2, -3, -5, -6, -3, -2, -4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 4, 2, 3, 5, 6, 3, 2, 4];\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.moveClick = number => {\n      console.log('move clicked', number);\n      this.setState(prevState => ({\n        selectedMove: number\n      }));\n    };\n\n    this.handleClick = e => {\n      console.log('handleClick');\n      let clicked = this.state.piece_clicked;\n\n      if (clicked) {\n        this.setState({\n          piece_clicked: false\n        }, this.newMove(clicked, e));\n      }\n    };\n\n    this.handlePieceClick = (e, i) => {\n      console.log('handlePieceClick');\n      let clicked = this.state.piece_clicked;\n      if (!clicked) this.setState({\n        piece_clicked: e\n      });else {\n        this.setState({\n          piece_clicked: false\n        }, this.newMove(clicked, e));\n      }\n    };\n\n    this.dropHandler = (e, target) => {\n      // console.log('Dropped', e.dataTransfer.getData('text/plain'), target);\n      e.preventDefault();\n      let origin = e.dataTransfer.getData('text/plain');\n      this.newMove(origin, target); // e.target.classList.remove('dragover');\n      // let target = e.target.dataset.position; \n      // let origin = e.dataTransfer.getData(\"text/plain\");\n      // this.newMove(origin, target);\n    };\n\n    this.state = {\n      currentMove: 0,\n      lastMove: null,\n      colorToMove: 1,\n      piece_clicked: false,\n      selectedMove: 0,\n      positions: [startingPosition] // 64-Array \n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Squares, {\n        position: this.state.positions[this.state.selectedMove],\n        onClick: this.handleClick,\n        pClick: this.handlePieceClick,\n        onDrop: this.dropHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"moves\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Moves, {\n          onClick: this.moveClick,\n          lastMove: this.state.lastMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 34\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  switchColor() {\n    return this.state.colorToMove === 1 ? -1 : 1;\n  }\n\n  getColor(square) {\n    return square < 0 ? -1 : 1;\n  }\n\n  hasPiece(square) {\n    return Math.abs(square) > 0;\n  }\n\n  newMove(from, to) {\n    let positions = JSON.parse(JSON.stringify(this.state.positions));\n    let old_position = Array.from(positions[positions.length - 1]);\n    let new_position = Array.from(old_position);\n    if (this.getColor(old_position[from]) !== this.state.colorToMove) return;\n\n    if (this.hasPiece(old_position[to])) {\n      if (this.getColor(old_position[from]) === this.getColor(old_position[to])) return;\n    }\n\n    let moved_piece = old_position[from];\n    new_position[to] = new_position[from];\n    new_position[from] = 0;\n    positions.push(new_position);\n    this.setState(prevState => ({\n      positions: positions,\n      lastMove: [prevState.currentMove, moved_piece, to],\n      currentMove: prevState.currentMove + 1,\n      selectedMove: prevState.selectedMove + 1,\n      colorToMove: this.switchColor()\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/App.js"],"names":["React","Component","Moves","Square","Squares","startingPosition","App","constructor","moveClick","number","console","log","setState","prevState","selectedMove","handleClick","e","clicked","state","piece_clicked","newMove","handlePieceClick","i","dropHandler","target","preventDefault","origin","dataTransfer","getData","currentMove","lastMove","colorToMove","positions","render","switchColor","getColor","square","hasPiece","Math","abs","from","to","JSON","parse","stringify","old_position","Array","length","new_position","moved_piece","push"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,gBAAgB,GACtB,CACA,CAAC,CADD,EACI,CAAC,CADL,EACQ,CAAC,CADT,EACY,CAAC,CADb,EACgB,CAAC,CADjB,EACoB,CAAC,CADrB,EACwB,CAAC,CADzB,EAC4B,CAAC,CAD7B,EAEA,CAAC,CAFD,EAEI,CAAC,CAFL,EAEQ,CAAC,CAFT,EAEY,CAAC,CAFb,EAEgB,CAAC,CAFjB,EAEoB,CAAC,CAFrB,EAEwB,CAAC,CAFzB,EAE4B,CAAC,CAF7B,EAGA,CAHA,EAGG,CAHH,EAGM,CAHN,EAGS,CAHT,EAGY,CAHZ,EAGe,CAHf,EAGkB,CAHlB,EAGqB,CAHrB,EAIA,CAJA,EAIG,CAJH,EAIM,CAJN,EAIS,CAJT,EAIY,CAJZ,EAIe,CAJf,EAIkB,CAJlB,EAIqB,CAJrB,EAKA,CALA,EAKG,CALH,EAKM,CALN,EAKS,CALT,EAKY,CALZ,EAKe,CALf,EAKkB,CALlB,EAKqB,CALrB,EAMA,CANA,EAMG,CANH,EAMM,CANN,EAMS,CANT,EAMY,CANZ,EAMe,CANf,EAMkB,CANlB,EAMqB,CANrB,EAOA,CAPA,EAOG,CAPH,EAOM,CAPN,EAOS,CAPT,EAOY,CAPZ,EAOe,CAPf,EAOkB,CAPlB,EAOqB,CAPrB,EAQA,CARA,EAQG,CARH,EAQM,CARN,EAQS,CART,EAQY,CARZ,EAQe,CARf,EAQkB,CARlB,EAQqB,CARrB,CADA;;AAYA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,GAAE;AACX;;AADW,SAqBbC,SArBa,GAqBAC,MAAD,IAAY;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,MAA3B;AACA,WAAKG,QAAL,CAAcC,SAAS,KAAG;AACxBC,QAAAA,YAAY,EAAEL;AADU,OAAH,CAAvB;AAGD,KA1BY;;AAAA,SA4BbM,WA5Ba,GA4BEC,CAAD,IAAO;AACnBN,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAIM,OAAO,GAAG,KAAKC,KAAL,CAAWC,aAAzB;;AACA,UAAGF,OAAH,EAAW;AACT,aAAKL,QAAL,CAAc;AAACO,UAAAA,aAAa,EAAE;AAAhB,SAAd,EAAsC,KAAKC,OAAL,CAAaH,OAAb,EAAsBD,CAAtB,CAAtC;AACD;AACF,KAlCY;;AAAA,SAoCbK,gBApCa,GAoCM,CAACL,CAAD,EAAIM,CAAJ,KAAU;AAC3BZ,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,UAAIM,OAAO,GAAG,KAAKC,KAAL,CAAWC,aAAzB;AACA,UAAG,CAACF,OAAJ,EAAa,KAAKL,QAAL,CAAc;AAACO,QAAAA,aAAa,EAAEH;AAAhB,OAAd,EAAb,KACI;AACF,aAAKJ,QAAL,CAAc;AAACO,UAAAA,aAAa,EAAE;AAAhB,SAAd,EAAsC,KAAKC,OAAL,CAAaH,OAAb,EAAsBD,CAAtB,CAAtC;AACD;AACF,KA3CY;;AAAA,SA6CbO,WA7Ca,GA6CC,CAACP,CAAD,EAAIQ,MAAJ,KAAe;AAC3B;AACAR,MAAAA,CAAC,CAACS,cAAF;AACA,UAAIC,MAAM,GAAGV,CAAC,CAACW,YAAF,CAAeC,OAAf,CAAuB,YAAvB,CAAb;AACA,WAAKR,OAAL,CAAaM,MAAb,EAAqBF,MAArB,EAJ2B,CAK3B;AACA;AACA;AACA;AACD,KAtDY;;AAEX,SAAKN,KAAL,GAAa;AACXW,MAAAA,WAAW,EAAE,CADF;AAEXC,MAAAA,QAAQ,EAAE,IAFC;AAGXC,MAAAA,WAAW,EAAE,CAHF;AAIXZ,MAAAA,aAAa,EAAE,KAJJ;AAKXL,MAAAA,YAAY,EAAE,CALH;AAMXkB,MAAAA,SAAS,EAAE,CAAC3B,gBAAD,CANA,CAMoB;;AANpB,KAAb;AAQD;;AAED4B,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWc,SAAX,CAAqB,KAAKd,KAAL,CAAWJ,YAAhC,CAAnB;AAAkE,QAAA,OAAO,EAAE,KAAKC,WAAhF;AAA6F,QAAA,MAAM,EAAE,KAAKM,gBAA1G;AAA4H,QAAA,MAAM,EAAE,KAAKE;AAAzI;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,qCAAyB,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE,KAAKf,SAArB;AAAgC,UAAA,QAAQ,EAAE,KAAKU,KAAL,CAAWY;AAArD;AAAA;AAAA;AAAA;AAAA,gBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAqCDI,EAAAA,WAAW,GAAE;AAAE,WAAO,KAAKhB,KAAL,CAAWa,WAAX,KAA2B,CAA3B,GAA+B,CAAC,CAAhC,GAAoC,CAA3C;AAA+C;;AAE9DI,EAAAA,QAAQ,CAACC,MAAD,EAAQ;AAAE,WAAOA,MAAM,GAAC,CAAP,GAAW,CAAC,CAAZ,GAAgB,CAAvB;AAA2B;;AAE7CC,EAAAA,QAAQ,CAACD,MAAD,EAAQ;AAAE,WAAOE,IAAI,CAACC,GAAL,CAASH,MAAT,IAAiB,CAAxB;AAA4B;;AAE9ChB,EAAAA,OAAO,CAACoB,IAAD,EAAOC,EAAP,EAAU;AACf,QAAIT,SAAS,GAAGU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAK1B,KAAL,CAAWc,SAA1B,CAAX,CAAhB;AACA,QAAIa,YAAY,GAAGC,KAAK,CAACN,IAAN,CAAWR,SAAS,CAACA,SAAS,CAACe,MAAV,GAAiB,CAAlB,CAApB,CAAnB;AACA,QAAIC,YAAY,GAAGF,KAAK,CAACN,IAAN,CAAWK,YAAX,CAAnB;AAEA,QAAG,KAAKV,QAAL,CAAcU,YAAY,CAACL,IAAD,CAA1B,MAAoC,KAAKtB,KAAL,CAAWa,WAAlD,EAA+D;;AAC/D,QAAG,KAAKM,QAAL,CAAcQ,YAAY,CAACJ,EAAD,CAA1B,CAAH,EAAmC;AACjC,UAAG,KAAKN,QAAL,CAAcU,YAAY,CAACL,IAAD,CAA1B,MAAoC,KAAKL,QAAL,CAAcU,YAAY,CAACJ,EAAD,CAA1B,CAAvC,EAAwE;AACzE;;AACD,QAAIQ,WAAW,GAAGJ,YAAY,CAACL,IAAD,CAA9B;AACAQ,IAAAA,YAAY,CAACP,EAAD,CAAZ,GAAmBO,YAAY,CAACR,IAAD,CAA/B;AACAQ,IAAAA,YAAY,CAACR,IAAD,CAAZ,GAAqB,CAArB;AACAR,IAAAA,SAAS,CAACkB,IAAV,CAAeF,YAAf;AAEA,SAAKpC,QAAL,CAAcC,SAAS,KAAG;AACxBmB,MAAAA,SAAS,EAAEA,SADa;AAExBF,MAAAA,QAAQ,EAAE,CAACjB,SAAS,CAACgB,WAAX,EAAwBoB,WAAxB,EAAqCR,EAArC,CAFc;AAGxBZ,MAAAA,WAAW,EAAEhB,SAAS,CAACgB,WAAV,GAAsB,CAHX;AAIxBf,MAAAA,YAAY,EAAED,SAAS,CAACC,YAAV,GAAuB,CAJb;AAKxBiB,MAAAA,WAAW,EAAE,KAAKG,WAAL;AALW,KAAH,CAAvB;AAOD;;AApFyB;;AAuF5B,eAAe5B,GAAf","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\n// import Board from './components/Board/Board';\nimport Moves from './components/Moves/Moves';\nimport Square from './components/Square/Square';\nimport Squares from './components/Squares/Squares';\n\n\n// TYPES (negative values for black)\n// PAWN - 1 \n// BISHOP - 2 \n// KNIGHT - 3 \n// ROOK - 4\n// QUEEN - 5 \n// KING - 6 \n\nconst startingPosition = \n[\n-4, -2, -3, -5, -6, -3, -2, -4,\n-1, -1, -1, -1, -1, -1, -1, -1,\n0, 0, 0, 0, 0, 0, 0, 0,\n0, 0, 0, 0, 0, 0, 0, 0,\n0, 0, 0, 0, 0, 0, 0, 0,\n0, 0, 0, 0, 0, 0, 0, 0,\n1, 1, 1, 1, 1, 1, 1, 1,\n4, 2, 3, 5, 6, 3, 2, 4\n];\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      currentMove: 0,\n      lastMove: null,\n      colorToMove: 1,\n      piece_clicked: false,\n      selectedMove: 0,\n      positions: [startingPosition], // 64-Array \n    };  \n  }\n\n  render(){\n    return(\n      <div className='container'>\n        <Squares position={this.state.positions[this.state.selectedMove]} onClick={this.handleClick} pClick={this.handlePieceClick} onDrop={this.dropHandler} /> \n        <div className='moves' > <Moves onClick={this.moveClick} lastMove={this.state.lastMove} /> </div>\n      </div> \n    );\n  } \n\n  moveClick = (number) => {\n    console.log('move clicked',number);\n    this.setState(prevState=>({\n      selectedMove: number\n    }));\n  }\n\n  handleClick = (e) => {\n    console.log('handleClick');\n    let clicked = this.state.piece_clicked; \n    if(clicked){\n      this.setState({piece_clicked: false}, this.newMove(clicked, e));\n    }\n  }\n\n  handlePieceClick = (e, i) => {\n    console.log('handlePieceClick');\n    let clicked = this.state.piece_clicked; \n    if(!clicked) this.setState({piece_clicked: e})\n    else{\n      this.setState({piece_clicked: false}, this.newMove(clicked, e));\n    }\n  }\n\n  dropHandler = (e, target) => {\n    // console.log('Dropped', e.dataTransfer.getData('text/plain'), target);\n    e.preventDefault();\n    let origin = e.dataTransfer.getData('text/plain'); \n    this.newMove(origin, target);\n    // e.target.classList.remove('dragover');\n    // let target = e.target.dataset.position; \n    // let origin = e.dataTransfer.getData(\"text/plain\");\n    // this.newMove(origin, target);\n  };\n\n  switchColor(){ return this.state.colorToMove === 1 ? -1 : 1; }\n\n  getColor(square){ return square<0 ? -1 : 1; }\n\n  hasPiece(square){ return Math.abs(square)>0; }\n\n  newMove(from, to){\n    let positions = JSON.parse(JSON.stringify(this.state.positions));\n    let old_position = Array.from(positions[positions.length-1]);\n    let new_position = Array.from(old_position);\n\n    if(this.getColor(old_position[from])!==this.state.colorToMove) return; \n    if(this.hasPiece(old_position[to])){ \n      if(this.getColor(old_position[from])===this.getColor(old_position[to])) return; \n    }\n    let moved_piece = old_position[from];\n    new_position[to] = new_position[from];\n    new_position[from] = 0;\n    positions.push(new_position);\n\n    this.setState(prevState=>({\n      positions: positions,\n      lastMove: [prevState.currentMove, moved_piece, to],\n      currentMove: prevState.currentMove+1,\n      selectedMove: prevState.selectedMove+1,\n      colorToMove: this.switchColor()\n    }));\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}