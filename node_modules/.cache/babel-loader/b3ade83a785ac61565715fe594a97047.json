{"ast":null,"code":"import React from 'react';\nimport './Piece.css';\nimport Draggable from 'react-draggable';\nconst typeConv = {\n  1: 'pawn',\n  2: 'bishop',\n  3: 'knight',\n  4: 'rook',\n  5: 'queen',\n  6: 'king'\n}; // <Piece position={index} \n// \t\t\t// onClick={() => availableMoves(piece[0])}\n// \t\t\tonDragStart={dragStartHandler}\n// \t\t\tonDragEnd={dragEndHandler}\n// \t\t\tpiece={piece} \n\nlet colorConv = number => {\n  if (number > 0) return 'white';else return 'black';\n};\n\nlet pieceToColor = piece => {\n  return piece < 0 ? -1 : 1;\n};\n\nconst Piece = ({\n  position,\n  piece,\n  onClick,\n  dragStart,\n  dragEnd,\n  colorToMove\n}) => {\n  let pieceClass = `piece ${typeConv[Math.abs(piece)]} ${colorConv(piece)}`; // let key = `p${position}`;\n\n  let properties = {\n    'className': pieceClass\n  };\n  console.log(colorToMove, piece);\n  if (colorToMove === pieceToColor(piece)) properties = { ...properties,\n    onDragEnd: dragEnd,\n    onDragStart: e => dragStart(e, position),\n    onClick: onClick,\n    draggable: 'true'\n  };\n  return /*#__PURE__*/React.createElement('div', properties); // <div className={pieceClass} onDragEnd={dragEnd} onDragStart={(e) => dragStart(e, position)} onClick={onClick} draggable=\"true\" />;\n};\n\n_c = Piece;\nexport default Piece;\n\nvar _c;\n\n$RefreshReg$(_c, \"Piece\");","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Piece/Piece.js"],"names":["React","Draggable","typeConv","colorConv","number","pieceToColor","piece","Piece","position","onClick","dragStart","dragEnd","colorToMove","pieceClass","Math","abs","properties","console","log","onDragEnd","onDragStart","e","draggable","createElement"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,MAAMC,QAAQ,GAAG;AAChB,KAAG,MADa;AACL,KAAE,QADG;AACO,KAAE,QADT;AACmB,KAAE,MADrB;AAC6B,KAAE,OAD/B;AACwC,KAAE;AAD1C,CAAjB,C,CAIC;AACA;AACA;AACA;AACA;;AAED,IAAIC,SAAS,GAAGC,MAAM,IAAI;AACzB,MAAGA,MAAM,GAAC,CAAV,EAAa,OAAO,OAAP,CAAb,KACK,OAAO,OAAP;AACL,CAHD;;AAKA,IAAIC,YAAY,GAAGC,KAAK,IAAI;AAC3B,SAAOA,KAAK,GAAC,CAAN,GAAU,CAAC,CAAX,GAAe,CAAtB;AACA,CAFD;;AAKA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWF,EAAAA,KAAX;AAAkBG,EAAAA,OAAlB;AAA2BC,EAAAA,SAA3B;AAAsCC,EAAAA,OAAtC;AAA+CC,EAAAA;AAA/C,CAAD,KAAiE;AAC9E,MAAIC,UAAU,GAAI,SAAQX,QAAQ,CAACY,IAAI,CAACC,GAAL,CAAST,KAAT,CAAD,CAAkB,IAAGH,SAAS,CAACG,KAAD,CAAQ,EAAxE,CAD8E,CAE9E;;AACA,MAAIU,UAAU,GACb;AACC,iBAAaH;AADd,GADD;AAIAI,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ,EAAyBN,KAAzB;AACA,MAAGM,WAAW,KAAGP,YAAY,CAACC,KAAD,CAA7B,EAAsCU,UAAU,GAAG,EAAC,GAAGA,UAAJ;AAAgBG,IAAAA,SAAS,EAACR,OAA1B;AAAmCS,IAAAA,WAAW,EAAGC,CAAD,IAAKX,SAAS,CAACW,CAAD,EAAIb,QAAJ,CAA9D;AAA6EC,IAAAA,OAAO,EAAEA,OAAtF;AAA+Fa,IAAAA,SAAS,EAAE;AAA1G,GAAb;AACtC,sBAAOtB,KAAK,CAACuB,aAAN,CAAoB,KAApB,EAA2BP,UAA3B,CAAP,CAT8E,CAU9E;AACA,CAXD;;KAAMT,K;AAaN,eAAeA,KAAf","sourcesContent":["import React from 'react'; \nimport './Piece.css';\nimport Draggable from 'react-draggable';\n\nconst typeConv = {\n\t1: 'pawn', 2:'bishop', 3:'knight', 4:'rook', 5:'queen', 6:'king'\n}\n\n\t// <Piece position={index} \n\t// \t\t\t// onClick={() => availableMoves(piece[0])}\n\t// \t\t\tonDragStart={dragStartHandler}\n\t// \t\t\tonDragEnd={dragEndHandler}\n\t// \t\t\tpiece={piece} \n\nlet colorConv = number => {\n\tif(number>0) return 'white';\n\telse return 'black'; \n}\n\nlet pieceToColor = piece => {\n\treturn piece<0 ? -1 : 1; \n}\n\n\nconst Piece = ({position, piece, onClick, dragStart, dragEnd, colorToMove}) => {\n\tlet pieceClass = `piece ${typeConv[Math.abs(piece)]} ${colorConv(piece)}`;\n\t// let key = `p${position}`;\n\tlet properties = \n\t\t{\n\t\t\t'className': pieceClass\n\t\t};\n\tconsole.log(colorToMove, piece);\n\tif(colorToMove===pieceToColor(piece)) properties = {...properties, onDragEnd:dragEnd, onDragStart: (e)=>dragStart(e, position), onClick: onClick, draggable: 'true'}\n\treturn React.createElement('div', properties);\n\t// <div className={pieceClass} onDragEnd={dragEnd} onDragStart={(e) => dragStart(e, position)} onClick={onClick} draggable=\"true\" />;\n}\n\nexport default Piece; "]},"metadata":{},"sourceType":"module"}