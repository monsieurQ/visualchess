{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/ChessReact/chess/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react'; // import Board from './components/Board/Board';\n\nimport Moves from './components/Moves/Moves';\nimport Square from './components/Square/Square'; // TYPES (negative values for black)\n// PAWN - 1 \n// BISHOP - 2 \n// KNIGHT - 3 \n// ROOK - 4\n// QUEEN - 5 \n// KING - 6 \n\nconst startingPosition = [-4, -2, -3, -5, -6, -3, -2, -4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 4, 2, 3, 5, 6, 3, 2, 4];\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.createSquares = position => {\n      let squares = [];\n      let piece_clicked = this.state.piece_clicked;\n      let click = this.handleClick;\n      let pClick = this.handlePieceClick;\n      let bgs = ['black', 'white'];\n      let tick = 0;\n      let counter = 0;\n      let onDrop = this.dropHandler;\n      position.forEach((square, index) => {\n        squares[index] = /*#__PURE__*/_jsxDEV(Square, {\n          dragStart: this.dragStartHandler,\n          dragEnd: this.dragEndHandler,\n          pClick: pClick,\n          index: index,\n          onClick: click,\n          onDrop: onDrop,\n          classes: bgs[tick],\n          piece: square\n        }, 's' + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 24\n        }, this);\n        counter++;\n        if (counter > 7) counter = 0;else tick = tick === 0 ? 1 : 0;\n      });\n      if (piece_clicked) squares[piece_clicked].classes += ' clicked';\n      return squares;\n    };\n\n    this.moveClick = number => {\n      console.log('move clicked', number);\n      this.setState(prevState => ({\n        selectedMove: number\n      }));\n    };\n\n    this.dragStartHandler = e => {\n      this.setState({\n        dragging: 'dragging'\n      });\n    };\n\n    this.dragEndHandler = e => {\n      e.preventDefault();\n      this.setState({\n        dragging: ''\n      }); // let element = e.target;\n      //     requestAnimationFrame(function () {\n      //     element.classList.remove('hide');\n      //   });\n    };\n\n    this.handleClick = e => {\n      console.log(`handleClick, ${e} clicked`);\n      let clicked = this.state.piece_clicked;\n\n      if (clicked !== null) {\n        this.setState({\n          piece_clicked: null\n        }, this.newMove(clicked, e));\n      }\n    };\n\n    this.handlePieceClick = e => {\n      let clicked = this.state.piece_clicked;\n      if (clicked === null) this.setState({\n        piece_clicked: e\n      });else {\n        this.setState({\n          piece_clicked: null\n        }, this.newMove(clicked, e));\n      }\n    };\n\n    this.dropHandler = e => {\n      e.preventDefault();\n      e.target.classList.remove('dragover');\n      let target = e.target.dataset.position;\n      let origin = e.dataTransfer.getData(\"text/plain\");\n      this.newMove(origin, target);\n    };\n\n    this.state = {\n      currentMove: 0,\n      lastMove: null,\n      dragging: '',\n      colorToMove: 1,\n      piece_clicked: null,\n      selectedMove: 0,\n      positions: [startingPosition]\n    };\n  }\n\n  render() {\n    let position = this.state.positions[this.state.selectedMove];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\" + this.state.dragging,\n        children: [\" \", this.createSquares(position), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"moves\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Moves, {\n          onClick: this.moveClick,\n          lastMove: this.state.lastMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 34\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n  switchColor() {\n    return this.state.colorToMove === 1 ? -1 : 1;\n  }\n\n  getColor(square) {\n    return square < 0 ? -1 : 1; //-1 = black, 1 = white \n  }\n\n  hasPiece(square) {\n    return Math.abs(square) > 0;\n  }\n\n  newMove(from, to) {\n    let positions = JSON.parse(JSON.stringify(this.state.positions));\n    let old_position = Array.from(positions[positions.length - 1]);\n    let new_position = Array.from(old_position);\n    if (this.getColor(old_position[from]) !== this.state.colorToMove) return;\n\n    if (this.hasPiece(old_position[to])) {\n      if (this.getColor(old_position[from]) === this.getColor(old_position[to])) return;\n    }\n\n    let moved_piece = old_position[from];\n    new_position[to] = new_position[from];\n    new_position[from] = 0;\n    positions.push(new_position);\n    this.setState(prevState => ({\n      positions: positions,\n      lastMove: [prevState.currentMove, moved_piece, to],\n      currentMove: prevState.currentMove + 1,\n      selectedMove: prevState.selectedMove + 1,\n      colorToMove: this.switchColor()\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/App.js"],"names":["React","Component","Moves","Square","startingPosition","App","constructor","createSquares","position","squares","piece_clicked","state","click","handleClick","pClick","handlePieceClick","bgs","tick","counter","onDrop","dropHandler","forEach","square","index","dragStartHandler","dragEndHandler","classes","moveClick","number","console","log","setState","prevState","selectedMove","e","dragging","preventDefault","clicked","newMove","target","classList","remove","dataset","origin","dataTransfer","getData","currentMove","lastMove","colorToMove","positions","render","switchColor","getColor","hasPiece","Math","abs","from","to","JSON","parse","stringify","old_position","Array","length","new_position","moved_piece","push"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\n// import Board from './components/Board/Board';\nimport Moves from './components/Moves/Moves';\nimport Square from './components/Square/Square';\n\n\n// TYPES (negative values for black)\n// PAWN - 1 \n// BISHOP - 2 \n// KNIGHT - 3 \n// ROOK - 4\n// QUEEN - 5 \n// KING - 6 \n\nconst startingPosition = \n[\n-4, -2, -3, -5, -6, -3, -2, -4,\n-1, -1, -1, -1, -1, -1, -1, -1,\n0, 0, 0, 0, 0, 0, 0, 0,\n0, 0, 0, 0, 0, 0, 0, 0,\n0, 0, 0, 0, 0, 0, 0, 0,\n0, 0, 0, 0, 0, 0, 0, 0,\n1, 1, 1, 1, 1, 1, 1, 1,\n4, 2, 3, 5, 6, 3, 2, 4\n];\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      currentMove: 0,\n      lastMove: null,\n      dragging: '',\n      colorToMove: 1,\n      piece_clicked: null,\n      selectedMove: 0,\n      positions: [startingPosition]\n    };  \n  }\n\n  createSquares = (position) => {\n    let squares = [];\n    let piece_clicked = this.state.piece_clicked;\n    let click = this.handleClick;\n    let pClick = this.handlePieceClick;\n    let bgs = ['black', 'white'];\n    let tick = 0;\n    let counter = 0; \n    let onDrop = this.dropHandler;\n    position.forEach((square, index) => {\n      squares[index] = <Square dragStart={this.dragStartHandler} dragEnd={this.dragEndHandler} key={'s'+index} pClick={pClick} index={index} onClick={click} onDrop={onDrop} classes={bgs[tick]} piece={square} />;\n      counter++; \n      if(counter>7) counter = 0; \n      else tick = (tick===0)? 1 : 0;\n    });\n    if(piece_clicked) squares[piece_clicked].classes += ' clicked';\n    return squares; \n  }\n\n  render(){\n    let position = this.state.positions[this.state.selectedMove];\n    return(\n      <div className='container'>\n        <div className={\"board\"+this.state.dragging}> {this.createSquares(position)} </div>\n        <div className='moves' > <Moves onClick={this.moveClick} lastMove={this.state.lastMove} /> </div>\n      </div> \n    );\n  } \n\n  moveClick = (number) => {\n    console.log('move clicked',number);\n    this.setState(prevState=>({\n      selectedMove: number\n    }));\n  }\n\n  // const dragOverHandler = (e) => {\n//  e.preventDefault(e);\n//  requestAnimationFrame(function () {\n//    e.target.classList.add('dragover');\n//  });\n// };\n\n  dragStartHandler = (e) => {\n    this.setState({dragging:'dragging'});\n  };\n // e.dataTransfer.dropEffect = \"move\";\n // e.dataTransfer.setData(\"text/plain\", e.target.dataset.position); \n // requestAnimationFrame(function () {\n //   e.target.classList.add('hide');\n // });\n  \n\n// const dragLeaveHandler = (e) => {\n//  e.preventDefault(); \n//  requestAnimationFrame(function () {\n//    e.target.classList.remove('dragover');\n//  }); \n// };\n\ndragEndHandler = (e) =>{\n e.preventDefault();\n this.setState({dragging:''});\n // let element = e.target;\n //     requestAnimationFrame(function () {\n //     element.classList.remove('hide');\n //   });\n\n};\n\n  handleClick = (e) => {\n    console.log(`handleClick, ${e} clicked`);\n    let clicked = this.state.piece_clicked; \n    if(clicked!==null){\n      this.setState({piece_clicked: null}, this.newMove(clicked, e));\n    }\n  };\n\n  handlePieceClick = (e) => {\n    let clicked = this.state.piece_clicked; \n    if(clicked===null) this.setState({piece_clicked: e})\n    else{\n      this.setState({piece_clicked: null}, this.newMove(clicked, e));\n    }\n  }\n\n  dropHandler = (e) => {\n    e.preventDefault();\n    e.target.classList.remove('dragover');\n    let target = e.target.dataset.position; \n    let origin = e.dataTransfer.getData(\"text/plain\");\n    this.newMove(origin, target)\n  };\n\n  switchColor(){\n    return this.state.colorToMove === 1 ? -1 : 1; \n  }\n\n  getColor(square){\n    return square<0 ? -1 : 1; //-1 = black, 1 = white \n  }\n\n  hasPiece(square){\n    return Math.abs(square)>0; \n  }\n\n  newMove(from, to){\n    let positions = JSON.parse(JSON.stringify(this.state.positions));\n\n    let old_position = Array.from(positions[positions.length-1]);\n    let new_position = Array.from(old_position);\n    if(this.getColor(old_position[from])!==this.state.colorToMove) return; \n    if(this.hasPiece(old_position[to])){ \n      if(this.getColor(old_position[from])===this.getColor(old_position[to])) return; \n    }\n    let moved_piece = old_position[from];\n    new_position[to] = new_position[from];\n    new_position[from] = 0;\n\n    positions.push(new_position);\n\n    this.setState(prevState=>({\n      positions: positions,\n      lastMove: [prevState.currentMove, moved_piece, to],\n      currentMove: prevState.currentMove+1,\n      selectedMove: prevState.selectedMove+1,\n      colorToMove: this.switchColor() \n    }));\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}