{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Board/Board.js\";\nimport React, { Component } from 'react';\nimport './Board.css';\nimport Square from '../Square/Square'; // TYPES \n// PAWN - 0 \n// BISHOP - 1 \n// KNIGHT - 2 \n// ROOK - 3 \n// QUEEN - 4 \n// KING - 5 \n\nconst startingPosition = {\n  //PAWNS \n  12: 0,\n  13: 0,\n  14: 0,\n  15: 0,\n  16: 0,\n  17: 0,\n  18: 0,\n  17: 0,\n  27: 0,\n  37: 0,\n  47: 0,\n  57: 0,\n  67: 0,\n  77: 0,\n  18: 3,\n  11: 3,\n  88: 3,\n  81: 3,\n  // ROOKS \n  28: 2,\n  21: 2,\n  71: 2,\n  78: 2,\n  // KNIGHTS \n  38: 1,\n  68: 1,\n  21: 1,\n  61: 1,\n  // BISHOPS \n  41: 4,\n  48: 4,\n  //QUEENS \n  51: 5,\n  58: 5 //KINGS \n\n};\n\nclass Board extends Component {\n  constructor() {\n    super();\n  }\n\n  initSquares() {\n    let squares = [];\n    let r = 8;\n    let c = 1;\n    let bgs = ['black', 'white'];\n    let tick = 0;\n\n    for (let i = 0; i < 64; i++) {\n      let pos = Number('' + c + r);\n      if (pos in startingPosition) squares.push( /*#__PURE__*/_jsxDEV(Square, {\n        row: r,\n        column: c,\n        background: bgs[tick],\n        piece: startingPosition.pos\n      }, '' + c + r, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 45\n      }, this));else squares.push( /*#__PURE__*/_jsxDEV(Square, {\n        row: r,\n        column: c,\n        background: bgs[tick]\n      }, '' + c + r, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 22\n      }, this));\n      c++;\n\n      if (c > 8) {\n        c = 1;\n        r--;\n      } else {\n        tick = tick === 0 ? 1 : 0;\n      }\n    }\n\n    return squares;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"board\",\n      children: this.initSquares()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Board/Board.js"],"names":["React","Component","Square","startingPosition","Board","constructor","initSquares","squares","r","c","bgs","tick","i","pos","Number","push","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,kBAAnB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,gBAAgB,GACtB;AACC;AACA,MAAI,CAFL;AAEQ,MAAI,CAFZ;AAEe,MAAI,CAFnB;AAEsB,MAAI,CAF1B;AAE6B,MAAI,CAFjC;AAEoC,MAAI,CAFxC;AAE2C,MAAI,CAF/C;AAGC,MAAI,CAHL;AAGQ,MAAI,CAHZ;AAGe,MAAI,CAHnB;AAGsB,MAAI,CAH1B;AAG6B,MAAI,CAHjC;AAGoC,MAAI,CAHxC;AAG2C,MAAI,CAH/C;AAKC,MAAI,CALL;AAKQ,MAAI,CALZ;AAKe,MAAI,CALnB;AAKsB,MAAI,CAL1B;AAK6B;AAC5B,MAAI,CANL;AAMQ,MAAI,CANZ;AAMe,MAAG,CANlB;AAMqB,MAAI,CANzB;AAM4B;AAC3B,MAAI,CAPL;AAOQ,MAAI,CAPZ;AAOe,MAAI,CAPnB;AAOsB,MAAI,CAP1B;AAO6B;AAC5B,MAAI,CARL;AAQQ,MAAI,CARZ;AAQe;AACd,MAAI,CATL;AASQ,MAAI,CATZ,CASc;;AATd,CADA;;AAaA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAC7BI,EAAAA,WAAW,GAAE;AACZ;AACA;;AAIDC,EAAAA,WAAW,GAAE;AACZ,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,GAAG,GAAG,CAAC,OAAD,EAAU,OAAV,CAAV;AACA,QAAIC,IAAI,GAAG,CAAX;;AACA,SAAI,IAAIC,CAAC,GAAE,CAAX,EAAaA,CAAC,GAAC,EAAf,EAAkBA,CAAC,EAAnB,EAAsB;AACrB,UAAIC,GAAG,GAAGC,MAAM,CAAC,KAAGL,CAAH,GAAKD,CAAN,CAAhB;AACA,UAAGK,GAAG,IAAIV,gBAAV,EAA4BI,OAAO,CAACQ,IAAR,eAAa,QAAC,MAAD;AAAqB,QAAA,GAAG,EAAEP,CAA1B;AAA6B,QAAA,MAAM,EAAEC,CAArC;AAAwC,QAAA,UAAU,EAAEC,GAAG,CAACC,IAAD,CAAvD;AAA+D,QAAA,KAAK,EAAER,gBAAgB,CAACU;AAAvF,SAAa,KAAGJ,CAAH,GAAKD,CAAlB;AAAA;AAAA;AAAA;AAAA,cAAb,EAA5B,KACKD,OAAO,CAACQ,IAAR,eAAa,QAAC,MAAD;AAAqB,QAAA,GAAG,EAAEP,CAA1B;AAA6B,QAAA,MAAM,EAAEC,CAArC;AAAwC,QAAA,UAAU,EAAEC,GAAG,CAACC,IAAD;AAAvD,SAAa,KAAGF,CAAH,GAAKD,CAAlB;AAAA;AAAA;AAAA;AAAA,cAAb;AACLC,MAAAA,CAAC;;AACD,UAAGA,CAAC,GAAC,CAAL,EAAO;AACNA,QAAAA,CAAC,GAAG,CAAJ;AACAD,QAAAA,CAAC;AACD,OAHD,MAGK;AACJG,QAAAA,IAAI,GAAGA,IAAI,KAAK,CAAT,GAAa,CAAb,GAAiB,CAAxB;AACA;AACD;;AACD,WAAOJ,OAAP;AACA;;AAEDS,EAAAA,MAAM,GAAE;AACP,wBACC;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA,gBACE,KAAKV,WAAL;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;;AAlC4B;;AAoC9B,eAAeF,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Board.css'; \nimport Square from '../Square/Square';\n\n\n\n// TYPES \n// PAWN - 0 \n// BISHOP - 1 \n// KNIGHT - 2 \n// ROOK - 3 \n// QUEEN - 4 \n// KING - 5 \n\n\nconst startingPosition = \n{\n\t//PAWNS \n\t12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, \n\t17: 0, 27: 0, 37: 0, 47: 0, 57: 0, 67: 0, 77: 0, \n\t\n\t18: 3, 11: 3, 88: 3, 81: 3, // ROOKS \n\t28: 2, 21: 2, 71:2, 78: 2, // KNIGHTS \n\t38: 1, 68: 1, 21: 1, 61: 1, // BISHOPS \n\t41: 4, 48: 4, //QUEENS \n\t51: 5, 58: 5 //KINGS \n};\n\nclass Board extends Component {\n\tconstructor(){\n\t\tsuper();\n\t}\n\n\n\n\tinitSquares(){\n\t\tlet squares = [];\n\t\tlet r = 8;\n\t\tlet c = 1; \n\t\tlet bgs = ['black', 'white'];\n\t\tlet tick = 0; \n\t\tfor(let i =0;i<64;i++){\n\t\t\tlet pos = Number(''+c+r);\n\t\t\tif(pos in startingPosition) squares.push(<Square key={''+c+r} row={r} column={c} background={bgs[tick]} piece={startingPosition.pos} />);\n\t\t\telse squares.push(<Square key={''+c+r} row={r} column={c} background={bgs[tick]}  />);\n\t\t\tc++; \n\t\t\tif(c>8){\n\t\t\t\tc = 1; \n\t\t\t\tr--;\n\t\t\t}else{\n\t\t\t\ttick = tick === 0 ? 1 : 0;\n\t\t\t}\n\t\t}\n\t\treturn squares; \n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div id=\"board\"> \n\t\t\t\t{this.initSquares()}\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Board; "]},"metadata":{},"sourceType":"module"}