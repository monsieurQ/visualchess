{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Square/Square.js\";\nimport React from 'react';\nimport './Square.css';\nimport Piece from '../Piece/Piece'; // import Draggable from 'react-draggable';\n\nconst dragOverHandler = e => {\n  e.preventDefault(e);\n  requestAnimationFrame(function () {\n    e.target.classList.add('dragover');\n  });\n};\n\nconst dragStartHandler = e => {\n  e.dataTransfer.dropEffect = \"move\";\n  e.dataTransfer.setData(\"text/plain\", e.target.dataset.position);\n  requestAnimationFrame(function () {\n    e.target.classList.add('hide');\n  });\n};\n\nconst dragLeaveHandler = e => {\n  e.preventDefault();\n  requestAnimationFrame(function () {\n    e.target.classList.remove('dragover');\n  });\n};\n\nconst dragEndHandler = e => {\n  e.preventDefault();\n  let element = e.target;\n  requestAnimationFrame(function () {\n    element.classList.remove('hide');\n  });\n};\n\nlet availableMoves = type => {\n  switch (type) {\n    case 0:\n      console.log('PAWN');\n      break;\n\n    default:\n      return;\n  }\n};\n\nfunction Square({\n  row,\n  column,\n  background,\n  piece,\n  onClick,\n  pieceClick,\n  onDrop\n}) {\n  let classes = 'square ' + background;\n  let position = Number('' + column + row);\n  if (piece) availableMoves(piece[0]);\n  return piece ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes,\n    \"data-row\": row,\n    \"data-column\": column,\n    \"data-position\": position,\n    onDragOver: dragOverHandler,\n    onDragLeave: dragLeaveHandler,\n    onDrop: onDrop,\n    children: /*#__PURE__*/_jsxDEV(Piece, {\n      position: position,\n      onClick: pieceClick,\n      onDragStart: dragStartHandler,\n      onDragEnd: dragEndHandler,\n      type: piece[0],\n      color: piece[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes,\n    onDrop: onDrop,\n    \"data-position\": position,\n    onDragLeave: dragLeaveHandler,\n    onDragEnd: dragEndHandler,\n    onDragOver: dragOverHandler,\n    onClick: onClick,\n    \"data-row\": row,\n    \"data-column\": column\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\nexport default Square;\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Square/Square.js"],"names":["React","Piece","dragOverHandler","e","preventDefault","requestAnimationFrame","target","classList","add","dragStartHandler","dataTransfer","dropEffect","setData","dataset","position","dragLeaveHandler","remove","dragEndHandler","element","availableMoves","type","console","log","Square","row","column","background","piece","onClick","pieceClick","onDrop","classes","Number"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport './Square.css';\nimport Piece from '../Piece/Piece';\n// import Draggable from 'react-draggable';\n\n\n\nconst dragOverHandler = (e) => {\n\te.preventDefault(e);\n\trequestAnimationFrame(function () {\n\t\te.target.classList.add('dragover');\n\t});\n};\n\nconst dragStartHandler = (e) => {\n\te.dataTransfer.dropEffect = \"move\";\n\te.dataTransfer.setData(\"text/plain\", e.target.dataset.position); \n\trequestAnimationFrame(function () {\n\t\te.target.classList.add('hide');\n\t});\n};\n\nconst dragLeaveHandler = (e) => {\n\te.preventDefault(); \n\trequestAnimationFrame(function () {\n\t\te.target.classList.remove('dragover');\n\t}); \n};\n\nconst dragEndHandler = (e) =>{\n\te.preventDefault();\n\tlet element = e.target;\n\t  \trequestAnimationFrame(function () {\n    \telement.classList.remove('hide');\n  \t});\n\n};\n\nlet availableMoves = (type) => {\n\tswitch(type){\n\t\tcase 0: \n\t\t\tconsole.log('PAWN');\n\t\t\tbreak;\n\n\t\tdefault: return;\n\t}\n}\n\n\nfunction Square({row, column, background, piece, onClick, pieceClick, onDrop}){\n\tlet classes = 'square '+background;\n\tlet position = Number(''+column+row);\n\tif(piece) availableMoves(piece[0]);\n\treturn piece\n\t\t? <div className={classes} data-row={row} \n\t\t\tdata-column={column}\n\t\t\tdata-position={position}\n\t\t\tonDragOver={dragOverHandler}\n\t\t\tonDragLeave={dragLeaveHandler}\n\t\t\tonDrop={onDrop}\n\t\t\t> \n\t\t\t<Piece position={position} \n\t\t\t\tonClick={pieceClick}\n\t\t\t\tonDragStart={dragStartHandler}\n\t\t\t\tonDragEnd={dragEndHandler}\n\t\t\t\ttype={piece[0]} color={piece[1]} /> \n\t\t</div>\n\t\t: <div className={classes} \n\t\t\tonDrop={onDrop}\n\t\t\tdata-position={position} \n\t\t\tonDragLeave={dragLeaveHandler} \n\t\t\tonDragEnd={dragEndHandler} \n\t\t\tonDragOver={dragOverHandler} \n\t\t\tonClick={onClick} \n\t\t\tdata-row={row} \n\t\t\tdata-column={column} />;\n}\n\n\nexport default Square; "]},"metadata":{},"sourceType":"module"}