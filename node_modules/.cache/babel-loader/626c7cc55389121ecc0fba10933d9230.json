{"ast":null,"code":"import _toConsumableArray from\"/Users/q/Documents/WebDocuments/chess/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/q/Documents/WebDocuments/chess/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/q/Documents/WebDocuments/chess/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/q/Documents/WebDocuments/chess/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/q/Documents/WebDocuments/chess/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/q/Documents/WebDocuments/chess/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import'./App.css';import React,{Component}from'react';import Moves from'./components/Moves/Moves';import PopUp from'./components/PopUp/PopUp';import ToggleTextButton from'./components/ToggleTextButton/ToggleTextButton';import ImageButton from'./components/ImageButton/ImageButton';import PGNDialog from'./components/PGNDialog/PGNDialog';import GamesList from'./components/GamesList/GamesList';import PromotionPrompt from'./components/PromotionPrompt/PromotionPrompt';import Draggable from'react-draggable';import*as ChessJS from'chess.js';var Chess=typeof ChessJS===\"function\"?ChessJS:ChessJS.Chess;var chess=new Chess();var squareID=[\"a8\",\"b8\",\"c8\",\"d8\",\"e8\",\"f8\",\"g8\",\"h8\",\"a7\",\"b7\",\"c7\",\"d7\",\"e7\",\"f7\",\"g7\",\"h7\",\"a6\",\"b6\",\"c6\",\"d6\",\"e6\",\"f6\",\"g6\",\"h6\",\"a5\",\"b5\",\"c5\",\"d5\",\"e5\",\"f5\",\"g5\",\"h5\",\"a4\",\"b4\",\"c4\",\"d4\",\"e4\",\"f4\",\"g4\",\"h4\",\"a3\",\"b3\",\"c3\",\"d3\",\"e3\",\"f3\",\"g3\",\"h3\",\"a2\",\"b2\",\"c2\",\"d2\",\"e2\",\"f2\",\"g2\",\"h2\",\"a1\",\"b1\",\"c1\",\"d1\",\"e1\",\"f1\",\"g1\",\"h1\"];var BOARD_ID='chessboard';var AUTOPLAY_SPEED=500;var SQUARE_SIZE=100;var CONTROL_CLASS='--control';// Variable in CSS for storing the ratio of attackers/defenders on a square \nvar App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);/*\n  ----------------------------------------------------------------------------------------------------------------------------------\n  ------------------------------------------------------------ REACT ---------------------------------------------------------------\n  ----------------------------------------------------------------------------------------------------------------------------------\n  */function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.keyDownHandler=function(e){switch(e.keyCode){case 39:// Right arrow \ne.preventDefault();if(_this.state.selected_move+1<=_this.state.fen_history.length-1){_this.setState(function(prevState){return{selected_move:prevState.selected_move+1};});}break;case 37:// Left arrow \ne.preventDefault();if(_this.state.selected_move>=1){_this.setState(function(prevState){return{selected_move:prevState.selected_move-1};});}break;case 27:// esc-key\ne.preventDefault();if(_this.state.popUp){_this.setState({popUp:false});}else if(_this.state.promotion){_this.closePromotionPrompt();}break;default:break;}};_this.dragStartHandler=function(e){// e: dragEvent\nconsole.log('dragStart',e);var square=e.target.dataset.position;e.dataTransfer.effectAllowed=\"all\";e.dataTransfer.dropEffect=\"move\";e.dataTransfer.setData(\"text/plain\",square);requestAnimationFrame(function(){e.target.classList.add('hide');});_this.highlightMoves(square);};_this.dragEndHandler=function(e){e.preventDefault();requestAnimationFrame(function(){e.target.classList.remove('hide');});};_this.dropHandler=function(e){e.preventDefault();var target=e.target.dataset.position;requestAnimationFrame(function(){e.target.classList.remove('dragover');});_this.removeClassesFromAll('dragover','moveable');var origin=e.dataTransfer.getData('text/plain');if(_this.newMove(origin,target)){_this.removeClassesFromAll('moveable','active');}};_this.dragOverHandler=function(e){e.preventDefault(e);requestAnimationFrame(function(){e.target.classList.add('dragover');});};_this.dragLeaveHandler=function(e){e.preventDefault();requestAnimationFrame(function(){e.target.classList.remove('dragover');});};_this.handleControlClick=function(){_this.setState(function(prevState){return{show_control:!prevState.show_control};});};_this.handleHideClick=function(){if(_this.state.show_pieces){document.getElementById('chessboard').classList.add('hidepieces');_this.setState({show_pieces:false});}else{document.getElementById('chessboard').classList.remove('hidepieces');_this.setState({show_pieces:true});}};_this.pgnClick=function(){_this.setState({popUp:{content:/*#__PURE__*/_jsx(PGNDialog,{closePopup:_this.closePopup}),closePopup:_this.closePopup}});};_this.moveClick=function(number){if(number===999)number=_this.state.history.length;// Last move \nelse if(number>_this.state.history.length||number<0)return;_this.setState({selected_move:number});};_this.handleAutoplayClick=function(){if(!_this.state.autoplay){_this.setState(function(state){return{autoplay:!state.autoplay};},function(){return _this.autoplay(_this.state.selected_move,Object.keys(_this.state.history).length);});}else{_this.setState(function(state){return{autoplay:!state.autoplay};});}};_this.handleClick=function(e){if(_this.state.promotion.from){_this.closePromotionPrompt();return;}var square=e.target.dataset.position;var clicked=_this.state.piece_clicked;if(clicked){if(_this.newMove(clicked,square)){_this.removeClassesFromAll('moveable','active');_this.setState({piece_clicked:false});}else{console.log('Error in handleClick');}}};_this.handlePieceClick=function(e){if(_this.state.promotion.from){_this.closePromotionPrompt();return;}var square=e.target.dataset.position;var clicked=_this.state.piece_clicked;if(square===clicked){_this.removeClassesFromAll('active','moveable');_this.setState({piece_clicked:null});return;}if(!clicked){if(_this.pieceIsTurnColor(square)){document.getElementById(square).classList.add('active');_this.highlightMoves(square);_this.setState({piece_clicked:square});}}else{_this.removeClassesFromAll('active','moveable');if(_this.squaresOfSameColor(square,clicked)){// If another piece of the same color is clicked, switch to that piece being active  \ndocument.getElementById(square).classList.add('active');_this.highlightMoves(square);_this.setState({piece_clicked:square});}else{// Capture \nif(_this.newMove(clicked,square)){_this.setState({piece_clicked:null});}}}};_this.closePopup=function(text){_this.setState({popUp:false});if(text)_this.loadPGN(text);};_this.toggleConvert=function(toggle){return toggle?'on':'off';};_this.cleanUpSquare=function(square){return square.length>2?square.slice(1):square;};_this.getOtherChessColor=function(){return chess.turn()===chess.WHITE?chess.BLACK:chess.WHITE;};_this.colorConv=function(color){return color==='w'?'white':'black';};_this.squaresOfSameColor=function(one,two){return chess.get(one).color===chess.get(two).color;};_this.pieceIsTurnColor=function(piece){return chess.get(piece).color===chess.turn();};_this.promotionHandler=function(piece,from,to){_this.setState({promotion:{from:null,to:null,color:null}});_this.newMove(from,to,piece);};_this.closePromotionPrompt=function(){_this.setState({promotion:{from:null,to:null,color:null},piece_clicked:false});};_this.removeClassFromAll=function(remove){document.querySelectorAll('.'+remove).forEach(function(el){return el.classList.remove(remove);});};_this.removeClassesFromAll=function(){for(var _len=arguments.length,classes=new Array(_len),_key=0;_key<_len;_key++){classes[_key]=arguments[_key];}classes.forEach(function(e){return document.querySelectorAll('.'+e).forEach(function(el){return el.classList.remove(e);});});};_this.hideBoardControl=function(){_this.removeClassFromAll('attacked');};_this.showBoardControl=function(){var control_flag=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;var show_control=control_flag===undefined?_this.state.show_control:control_flag;_this.removeClassesFromAll('attacked','kingcheck');if(chess.in_check()){var square=document.getElementById(chess.get_king());square.classList.add('kingcheck');if(!show_control)return;chess.moves({verbose:true}).forEach(function(move){var dom=document.getElementById(move.to);dom.classList.add('attacked');dom.style.setProperty(CONTROL_CLASS,'100%');});return;}if(!show_control)return;var control=chess.defended_pieces_all(true,true,false);for(var _i=0,_Object$entries=Object.entries(control);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),_square=_Object$entries$_i[0],value=_Object$entries$_i[1];if(value.w>0||value.b>0){var dom=document.getElementById(_square);dom.classList.add('attacked');var ratio=_this.getRatio(value.w,value.b);dom.style.setProperty(CONTROL_CLASS,ratio+'%');}}};_this.state={selected_move:0,piece_clicked:false,fen_history:[chess.fen()],// all moves, each represented by fen \nflipped:false,history:{},// Single moves, each with from and to-squares and in SAN format \nloaded_game:null,//PGN of loaded game \npopUp:false,show_control:true,weighted:false,players:false,result:'',show_pieces:true,promotion:{from:null,to:null,color:null},autoplay:false};return _this;}/**\n   * \n   * Each render gets every piece from chess.js. Pieces are rendered as children into the squares \n   * Board control is realized through the .square-bg children\n   * List of played moves is passed to the Moves-component, which also displays game results \n   * \n   **/_createClass(App,[{key:\"render\",value:function render(){var _this2=this;chess.load(this.state.fen_history[this.state.selected_move]);var colorToMove=chess.turn();var arr=this.state.flipped?Array.prototype.reverse.call(chess.board().flat()):chess.board().flat();var squares_ids=this.state.flipped?squareID.reverse():squareID;var square_classes=['light','dark'];var c=0;var players=this.state.players;return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{id:\"title\",children:\"visual chess\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsx(\"div\",{id:BOARD_ID,className:\"chessboard\",children:arr.map(function(square,i){return square?/*#__PURE__*/_jsxs(\"div\",{onDragOver:_this2.dragOverHandler,onDragLeave:_this2.dragLeaveHandler,onDrop:_this2.dropHandler,id:squares_ids[i],\"data-position\":squares_ids[i],\"data-count\":i,className:\"square \".concat(square_classes[c%2]),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"square-bg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"control-dark\"}),/*#__PURE__*/_jsx(\"div\",{className:\"control-light\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"piece \".concat(_this2.colorConv(square.color),\" \").concat(square.type),draggable:\"true\",\"data-position\":squares_ids[i],onDragStart:_this2.dragStartHandler,onDragEnd:_this2.dragEndHandler,onClick:_this2.handlePieceClick})]},squares_ids[i]):/*#__PURE__*/_jsx(\"div\",{\"data-position\":squares_ids[i],id:squares_ids[i],\"data-count\":i,onDragOver:_this2.dragOverHandler,onTouchStart:_this2.touchStartHandler,onDragLeave:_this2.dragLeaveHandler,onClick:_this2.handleClick,onDrop:_this2.dropHandler,className:\"square\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"square-bg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"control-dark\"}),/*#__PURE__*/_jsx(\"div\",{className:\"control-light\"})]})},squares_ids[i]);})}),this.state.promotion.from?/*#__PURE__*/_jsx(PromotionPrompt,{onClick:this.promotionHandler,from:this.state.promotion.from,to:this.state.promotion.to,color:this.state.promotion.color}):'',/*#__PURE__*/_jsxs(\"aside\",{children:[/*#__PURE__*/_jsx(Moves,{onClick:this.moveClick,selected_move:this.state.selected_move,moves:this.state.history,colorToMove:colorToMove,result:this.state.result,whiteplayer:this.state.whiteplayer,blackplayer:this.state.blackplayer}),/*#__PURE__*/_jsxs(\"div\",{className:\"cards\",children:[players&&/*#__PURE__*/_jsxs(\"div\",{className:\"players\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"whiteplayer\",children:players.whiteplayer?players.whiteplayer:'Anonymous'}),/*#__PURE__*/_jsx(\"div\",{className:\"blackplayer\",children:players.blackplayer?players.blackplayer:'Anonymous'})]}),this.state.result&&/*#__PURE__*/_jsxs(\"div\",{className:\"result\",children:[\" \",this.state.result,\" \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button_container\",children:[/*#__PURE__*/_jsx(ImageButton,{button:\"pgn_button\",altText:\"Enter PGN\",onClick:this.pgnClick}),/*#__PURE__*/_jsx(ImageButton,{button:\"play_button\",altText:\"Turn Autoplay on\",state:this.toggleConvert(this.state.autoplay),onClick:this.handleAutoplayClick}),/*#__PURE__*/_jsx(ToggleTextButton,{text:['Hide Pieces','Show Pieces'],initialText:0,onClick:this.handleHideClick}),/*#__PURE__*/_jsx(ToggleTextButton,{text:['Hide Board Control','Show Board Control'],initialText:0,onClick:this.handleControlClick})]}),/*#__PURE__*/_jsxs(\"footer\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"created using (a modified) \",/*#__PURE__*/_jsx(\"a\",{alt:\"Chess.JS Github\",href:\"https://github.com/jhlywa/chess.js/blob/master/README.md\",children:\"chess.js\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"piece design from \",/*#__PURE__*/_jsx(\"a\",{href:\"lichess.org\",alt:\"Lichess\",children:\"lichess.org\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"contact: \",/*#__PURE__*/_jsx(\"a\",{href:\"mailto: quirschnei@gmail.com\",children:\"quirschnei@gmail.com\"})]})]})]})]}),this.state.popUp?/*#__PURE__*/_jsx(PopUp,{props:this.state.popUp}):'']});}},{key:\"componentDidMount\",value:function componentDidMount(){document.addEventListener(\"keydown\",this.keyDownHandler);if(this.state.show_control)this.showBoardControl();}/**\n   * If show/hide pieces or show/hide Board control are triggered, no need to re-render (changes are done through DOM / CSS) \n   **/},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(this.state.show_pieces!==nextState.show_pieces)return false;if(this.state.show_control!==nextState.show_control){this.showBoardControl(nextState.show_control);return false;}return true;}/**\n   * Highlights last move and calls showBoardControl after render \n   **/},{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(this.state.selected_move>0){// For highlighting the last move\nthis.removeClassFromAll('highlighted');try{this.highlightSquare(this.state.history[this.state.selected_move-1].to);}catch(err){console.error('Error:',err);}}if(this.state.show_control)this.showBoardControl();}/*\n  ----------------------------------------------------------------------------------------------------------------------------------\n  ---------------------------------------------------- EVENT HANLDERS --------------------------------------------------------------\n  ----------------------------------------------------------------------------------------------------------------------------------\n  */},{key:\"getRandomIntInclusive\",/*\n  ----------------------------------------------------------------------------------------------------------------------------------\n  ----------------------------------------------------        UTILITY        -------------------------------------------------------\n  ----------------------------------------------------------------------------------------------------------------------------------\n  */value:function getRandomIntInclusive(min,max){min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min+1)+min);//The maximum is inclusive and the minimum is inclusive\n}/**\n   * Recursive method, goes through all played moves, as long as uninterrupted by state \n   **/},{key:\"autoplay\",value:function autoplay(point,end){var _this3=this;console.log(point,end);++point;if(point>end||!this.state.autoplay){this.setState({autoplay:false});return false;}this.setState({selected_move:point});setTimeout(function(){return _this3.autoplay(point,end);},AUTOPLAY_SPEED);}},{key:\"loadPGNfromServer\",value:function loadPGNfromServer(url){var _this4=this;fetch(url).then(function(res){return res.text();}).then(function(res){return _this4.loadPGN(res);});}/**\n   * Loads a proveded PGN (format to save chess-games)\n   * Passes it to chess.js and extracts titles and names of players and game result (if available) to display\n   * Loads moves into state (history and fen_history), as chess.js does not allow to browse through \n   * the move history. As such, each position in the game is saved via the corresponding FEN-string  \n   * Afterwards, chess.js is reset to the starting position \n   **/},{key:\"loadPGN\",value:function loadPGN(pgn){var load_result=chess.load_pgn(pgn);var headers=chess.header();var players={};if(headers.Black){var content=headers.BlackTitle?\"[\".concat(headers.BlackTitle,\"] \").concat(headers.Black):headers.Black;players.whiteplayer=content;}if(headers.White){var _content=headers.WhiteTitle?\"[\".concat(headers.WhiteTitle,\"] \").concat(headers.White):headers.White;players.blackplayer=_content;}var result=headers.Result?'Result: '+headers.Result:'';if(headers.Termination)result+=\" (\".concat(headers.Termination,\")\");if(load_result){var history=chess.history({verbose:true});var new_history={};chess.reset();var fen_history=[chess.fen()];history.forEach(function(e,i){chess.move(e);fen_history.push(chess.fen());new_history[i]={from:e.from,to:e.to,san:e.san};});chess.load(fen_history[0]);this.setState({history:new_history,fen_history:fen_history,loaded_game:pgn,selected_move:0,result:result,players:players});}else console.log(load_result);}},{key:\"loadFEN\",value:function loadFEN(fen){var load_result=chess.load(fen);var fen_history=[chess.fen()];var history={};this.setState({fen_history:fen_history,history:history,selected_move:0});}// If square is of format piece-square, remove piece (e.g. ba8 => a8) \n},{key:\"getRatio\",value:function getRatio(w,b){if(w===0&&b===0)return 0;var sum=w+b;var whiteshare=w/sum*100;return whiteshare;}},{key:\"getRowFromSquare\",value:function getRowFromSquare(square){return Number(square.charAt(1));}},{key:\"isOnPromotionSquare\",value:function isOnPromotionSquare(square,color){return color==='w'?this.getRowFromSquare(square)==8:this.getRowFromSquare(square)==1;}/*\n  ----------------------------------------------------------------------------------------------------------------------------------\n  ----------------------------------------------------     CHESS     ---------------------------------------------------------------\n  ----------------------------------------------------------------------------------------------------------------------------------\n  */ /**\n   * Called by the PromotionPromt-component, passes clicked option to newMove function and \n   **/},{key:\"openPromotionPrompt\",value:function openPromotionPrompt(from,to,color){this.setState({promotion:{from:from,to:to,color:color}});}},{key:\"makeRandomMove\",value:function makeRandomMove(){var possible_moves=chess.moves({verbose:true});var move=possible_moves[this.getRandomInt(possible_moves.length)];this.newMove(move.from,move.to);}},{key:\"getRandomInt\",value:function getRandomInt(max){return Math.floor(Math.random()*max);}/**\n   * Method for handling new moves. Updates history (overrides if necessary) \n   * Checks for promotion (if a pawn reaches a respective square)\n   * otherwise passes move to chess.js and updates state \n   **/},{key:\"newMove\",value:function newMove(from,to){var promoteTo=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var fen_history=_toConsumableArray(this.state.fen_history);var history=Object.assign({},this.state.history);var options={from:from,to:to};if(this.state.selected_move<this.state.fen_history.length){// Override if a previous move was selected\nfen_history=fen_history.slice(0,this.state.selected_move+1);var new_history={};for(var _i2=0,_Object$entries2=Object.entries(history);_i2<_Object$entries2.length;_i2++){var _Object$entries2$_i=_slicedToArray(_Object$entries2[_i2],2),key=_Object$entries2$_i[0],value=_Object$entries2$_i[1];if(key>=this.state.selected_move)break;new_history[key]=value;}history=Object.assign({},new_history);}if(promoteTo)options.promotion=promoteTo;else{if(this.isOnPromotionSquare(to,chess.turn())&&chess.get(from).type==='p'){if(this.state.promotion.from===null){this.openPromotionPrompt(from,to,this.colorConv(chess.turn()));return;}else{options.promotion=promoteTo;}}}var res=chess.move(options);if(res){fen_history.push(chess.fen());history[this.state.selected_move]={from:options.from,to:options.to,san:res.san};if(chess.result()){// If game over (for any reason)  \nthis.setState(function(prevState){return{selected_move:prevState.selected_move+1,history:history,fen_history:fen_history,result:chess.result()};});return;}this.setState(function(prevState){return{selected_move:prevState.selected_move+1,history:history,fen_history:fen_history};});return res.san;}else{console.log('Error making new move: '+res);return false;}}/*\n  ----------------------------------------------------------------------------------------------------------------------------------\n  ----------------------------------------------------         DOM            ------------------------------------------------------\n  ----------------------------------------------------------------------------------------------------------------------------------\n  */},{key:\"highlightMoves\",value:function highlightMoves(piece){var _this5=this;chess.moves({square:piece,verbose:true}).forEach(function(move){_this5.highlightSquare(move.to,'moveable');});}},{key:\"highlightSquare\",value:function highlightSquare(square){var highlightClass=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'highlighted';document.getElementById(square).classList.add(highlightClass);}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/chess/front/src/App.js"],"names":["React","Component","Moves","PopUp","ToggleTextButton","ImageButton","PGNDialog","GamesList","PromotionPrompt","Draggable","ChessJS","Chess","chess","squareID","BOARD_ID","AUTOPLAY_SPEED","SQUARE_SIZE","CONTROL_CLASS","App","keyDownHandler","e","keyCode","preventDefault","state","selected_move","fen_history","length","setState","prevState","popUp","promotion","closePromotionPrompt","dragStartHandler","console","log","square","target","dataset","position","dataTransfer","effectAllowed","dropEffect","setData","requestAnimationFrame","classList","add","highlightMoves","dragEndHandler","remove","dropHandler","removeClassesFromAll","origin","getData","newMove","dragOverHandler","dragLeaveHandler","handleControlClick","show_control","handleHideClick","show_pieces","document","getElementById","pgnClick","content","closePopup","moveClick","number","history","handleAutoplayClick","autoplay","Object","keys","handleClick","from","clicked","piece_clicked","handlePieceClick","pieceIsTurnColor","squaresOfSameColor","text","loadPGN","toggleConvert","toggle","cleanUpSquare","slice","getOtherChessColor","turn","WHITE","BLACK","colorConv","color","one","two","get","piece","promotionHandler","to","removeClassFromAll","querySelectorAll","forEach","el","classes","hideBoardControl","showBoardControl","control_flag","undefined","in_check","get_king","moves","verbose","move","dom","style","setProperty","control","defended_pieces_all","entries","value","w","b","ratio","getRatio","fen","flipped","loaded_game","weighted","players","result","load","colorToMove","arr","Array","prototype","reverse","call","board","flat","squares_ids","square_classes","c","map","i","type","touchStartHandler","whiteplayer","blackplayer","addEventListener","nextProps","nextState","highlightSquare","err","error","min","max","Math","ceil","floor","random","point","end","setTimeout","url","fetch","then","res","pgn","load_result","load_pgn","headers","header","Black","BlackTitle","White","WhiteTitle","Result","Termination","new_history","reset","push","san","sum","whiteshare","Number","charAt","getRowFromSquare","possible_moves","getRandomInt","promoteTo","assign","options","key","isOnPromotionSquare","openPromotionPrompt","highlightClass"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport Moves from './components/Moves/Moves';\nimport PopUp from './components/PopUp/PopUp';\nimport ToggleTextButton from './components/ToggleTextButton/ToggleTextButton';\nimport ImageButton from './components/ImageButton/ImageButton';\nimport PGNDialog from './components/PGNDialog/PGNDialog';\nimport GamesList from './components/GamesList/GamesList';\nimport PromotionPrompt from './components/PromotionPrompt/PromotionPrompt';\nimport Draggable from 'react-draggable';\n\nimport * as ChessJS from 'chess.js';\nconst Chess = typeof ChessJS === \"function\" ? ChessJS : ChessJS.Chess;\nconst chess = new Chess();\n\nconst squareID = [\"a8\", \"b8\", \"c8\", \"d8\", \"e8\", \"f8\", \"g8\", \"h8\", \"a7\", \"b7\", \"c7\", \"d7\", \"e7\", \"f7\", \"g7\", \"h7\", \"a6\", \"b6\", \"c6\", \"d6\", \"e6\", \"f6\", \"g6\", \"h6\", \"a5\", \"b5\", \"c5\", \"d5\", \"e5\", \"f5\", \"g5\", \"h5\", \"a4\", \"b4\", \"c4\", \"d4\", \"e4\", \"f4\", \"g4\", \"h4\", \"a3\", \"b3\", \"c3\", \"d3\", \"e3\", \"f3\", \"g3\", \"h3\", \"a2\", \"b2\", \"c2\", \"d2\", \"e2\", \"f2\", \"g2\", \"h2\", \"a1\", \"b1\", \"c1\", \"d1\", \"e1\", \"f1\", \"g1\", \"h1\"];\nconst BOARD_ID = 'chessboard'; \nconst AUTOPLAY_SPEED = 500; \nconst SQUARE_SIZE = 100;\nconst CONTROL_CLASS = '--control'; // Variable in CSS for storing the ratio of attackers/defenders on a square \n\n\nclass App extends Component {\n\n  /*\n  ----------------------------------------------------------------------------------------------------------------------------------\n  ------------------------------------------------------------ REACT ---------------------------------------------------------------\n  ----------------------------------------------------------------------------------------------------------------------------------\n  */\n\n\n  constructor(){\n    super();\n\n    this.state = {\n      selected_move: 0,\n      piece_clicked: false,\n      fen_history: [chess.fen()], // all moves, each represented by fen \n      flipped: false,\n      history: {}, // Single moves, each with from and to-squares and in SAN format \n      loaded_game: null, //PGN of loaded game \n      popUp: false, \n      show_control: true,\n      weighted: false,\n      players: false,\n      result: '',\n      show_pieces: true,\n      promotion: {\n        from: null,\n        to: null,\n        color: null\n      },\n      autoplay: false\n    };  \n  }\n\n  /**\n   * \n   * Each render gets every piece from chess.js. Pieces are rendered as children into the squares \n   * Board control is realized through the .square-bg children\n   * List of played moves is passed to the Moves-component, which also displays game results \n   * \n   **/\n  render(){\n    chess.load(this.state.fen_history[this.state.selected_move]);\n    let colorToMove = chess.turn();\n    let arr = this.state.flipped ? Array.prototype.reverse.call(chess.board().flat()) : chess.board().flat();\n    let squares_ids = this.state.flipped ? squareID.reverse() : squareID;\n\n    let square_classes = ['light', 'dark'];\n    let c = 0; \n    let players = this.state.players;\n    return(\n      <div className='container'>\n        <h1 id=\"title\">\n          visual chess\n        </h1>\n        <div className=\"main\"> \n          <div id={BOARD_ID} className='chessboard'> \n            {\n              arr.map((square, i)=>{\n                return square \n                ? \n                <div \n                  onDragOver={this.dragOverHandler} \n                  onDragLeave={this.dragLeaveHandler} \n                  onDrop={this.dropHandler} \n                  id={squares_ids[i]}\n                  data-position={squares_ids[i]}\n                  data-count={i}\n                  key={squares_ids[i]} \n                  className={`square ${square_classes[c%2]}`}> \n                    <div className='square-bg'>\n                      <div className='control-dark' /> \n                      <div className='control-light' />\n                    </div> \n                    <div \n                      className={`piece ${this.colorConv(square.color)} ${square.type}`}\n                      draggable='true'\n                      data-position={squares_ids[i]}\n                      onDragStart={this.dragStartHandler}\n                      onDragEnd={this.dragEndHandler}\n                      onClick={this.handlePieceClick}\n                    />  \n                </div>\n                : \n                <div \n                  data-position={squares_ids[i]}\n                  id={squares_ids[i]}\n                  data-count={i}\n                  onDragOver={this.dragOverHandler} \n                  onTouchStart={this.touchStartHandler}\n                  onDragLeave={this.dragLeaveHandler} \n                  onClick={this.handleClick} \n                  onDrop={this.dropHandler} \n                  key={squares_ids[i]} \n                  className='square'> \n                    <div className='square-bg'>\n                      <div className='control-dark' /> \n                      <div className='control-light' />\n                    </div> \n                </div>         \n            })\n          }\n          </div>\n\n          {this.state.promotion.from ? \n            <PromotionPrompt \n              onClick={this.promotionHandler}\n              from={this.state.promotion.from}\n              to={this.state.promotion.to}\n              color={this.state.promotion.color}\n\n              />\n              : ''\n          }\n\n          <aside>\n            <Moves \n              onClick={this.moveClick} \n              selected_move={this.state.selected_move}\n              moves={this.state.history}\n              colorToMove={colorToMove}\n              result={this.state.result}\n              whiteplayer={this.state.whiteplayer}\n              blackplayer={this.state.blackplayer}\n              />\n\n              <div className=\"cards\">\n                { players && \n                    <div className=\"players\"> \n                      <div className=\"whiteplayer\">{players.whiteplayer ? players.whiteplayer : 'Anonymous'}</div> \n                      <div className=\"blackplayer\">{players.blackplayer ? players.blackplayer : 'Anonymous'}</div>\n                    </div>\n                }\n\n                { this.state.result && \n                    <div className=\"result\"> {this.state.result} </div> \n                } \n              </div>\n              \n              <div className=\"button_container\">\n                  <ImageButton \n                    button='pgn_button' \n                    altText='Enter PGN'\n                    onClick={this.pgnClick}\n                  />\n                  <ImageButton \n                    button='play_button' \n                    altText='Turn Autoplay on'\n                    state={this.toggleConvert(this.state.autoplay)}\n                    onClick={this.handleAutoplayClick}  \n                    />\n                  <ToggleTextButton \n                    text={['Hide Pieces', 'Show Pieces']} \n                    initialText={0}\n                    onClick={this.handleHideClick} />\n                  <ToggleTextButton \n                    text={['Hide Board Control', 'Show Board Control']} \n                    initialText={0}\n                    onClick={this.handleControlClick} />\n              </div>\n\n              {<footer> \n                <p>created using (a modified) <a alt=\"Chess.JS Github\" href=\"https://github.com/jhlywa/chess.js/blob/master/README.md\">chess.js</a></p>\n                <p>piece design from <a href=\"lichess.org\" alt=\"Lichess\">lichess.org</a></p>\n                <p>contact: <a href = \"mailto: quirschnei@gmail.com\">quirschnei@gmail.com</a></p>\n              </footer>}\n           \n          </aside>\n         \n          \n        </div>\n\n        {this.state.popUp ?  \n          <PopUp\n             props={this.state.popUp}\n          />  \n          : ''}\n\n      </div> \n    );\n  } \n  \n  componentDidMount(){\n    document.addEventListener(\"keydown\", this.keyDownHandler);\n    if(this.state.show_control) this.showBoardControl();\n  }\n\n\n  /**\n   * If show/hide pieces or show/hide Board control are triggered, no need to re-render (changes are done through DOM / CSS) \n   **/\n  shouldComponentUpdate(nextProps, nextState){\n    if(this.state.show_pieces!==nextState.show_pieces) return false;\n    if(this.state.show_control!==nextState.show_control){\n      this.showBoardControl(nextState.show_control);\n      return false; \n    }\n    return true;\n  }\n\n  /**\n   * Highlights last move and calls showBoardControl after render \n   **/\n  componentDidUpdate() {\n    if(this.state.selected_move>0){ // For highlighting the last move\n      this.removeClassFromAll('highlighted');\n      try{\n        this.highlightSquare(this.state.history[this.state.selected_move-1].to);\n      }catch(err){\n        console.error('Error:', err);\n      }\n    }\n    if(this.state.show_control) this.showBoardControl();\n  }\n\n  /*\n  ----------------------------------------------------------------------------------------------------------------------------------\n  ---------------------------------------------------- EVENT HANLDERS --------------------------------------------------------------\n  ----------------------------------------------------------------------------------------------------------------------------------\n  */\n\n\n  keyDownHandler = (e)=>{\n    switch(e.keyCode){\n      case 39: // Right arrow \n        e.preventDefault();\n        if(this.state.selected_move+1<=this.state.fen_history.length-1){ \n          this.setState(prevState=>({selected_move: prevState.selected_move+1}));                \n        }\n        break;\n      case 37: // Left arrow \n        e.preventDefault();\n        if(this.state.selected_move>=1){\n          this.setState(prevState=>({selected_move: prevState.selected_move-1}));\n        }\n        break;\n      case 27: // esc-key\n        e.preventDefault(); \n        if(this.state.popUp){\n          this.setState({popUp: false});\n        } else if(this.state.promotion){\n          this.closePromotionPrompt();\n        }\n        break;\n      default: break; \n    }\n  }\n\n  dragStartHandler = (e) => { // e: dragEvent\n    console.log('dragStart', e);\n    let square = e.target.dataset.position;\n    e.dataTransfer.effectAllowed = \"all\"\n    e.dataTransfer.dropEffect = \"move\";\n    e.dataTransfer.setData(\"text/plain\", square);\n    requestAnimationFrame(function () {\n      e.target.classList.add('hide');\n    });\n    this.highlightMoves(square);   \n  }\n\n  dragEndHandler = (e) =>{\n    e.preventDefault();\n    requestAnimationFrame(function () {\n      e.target.classList.remove('hide');\n    }); \n  }\n\n  dropHandler = (e) => {\n    e.preventDefault();\n    let target = e.target.dataset.position;\n     requestAnimationFrame(function () {\n      e.target.classList.remove('dragover');\n    });\n    this.removeClassesFromAll('dragover', 'moveable'); \n    let origin = e.dataTransfer.getData('text/plain');\n    if(this.newMove(origin, target)){\n      this.removeClassesFromAll('moveable', 'active');\n    }\n  }\n\n  dragOverHandler = (e) => {\n    e.preventDefault(e);\n    requestAnimationFrame(function () { \n      e.target.classList.add('dragover');\n    });\n  }\n  \n  dragLeaveHandler = (e) => {\n    e.preventDefault(); \n    requestAnimationFrame(function () {\n      e.target.classList.remove('dragover');\n    }); \n  }\n\n  handleControlClick = () => {  \n    this.setState(prevState=> ({show_control: !prevState.show_control}));  \n  }\n\n  handleHideClick = () => {\n    if(this.state.show_pieces){\n      document.getElementById('chessboard').classList.add('hidepieces');\n      this.setState({show_pieces: false});\n    }else{\n      document.getElementById('chessboard').classList.remove('hidepieces');\n      this.setState({show_pieces: true});\n    }\n  }\n\n  pgnClick = () =>{\n    this.setState({popUp: {content: <PGNDialog closePopup={this.closePopup} />, closePopup: this.closePopup}});\n  }\n\n  moveClick = (number) => {\n    if(number===999) number=this.state.history.length; // Last move \n    else if(number>this.state.history.length || number<0) return;  \n    this.setState({selected_move:number});\n  }\n\n  /**\n   * Calls the recursive autoplay function or updates state to stop autoplay-execution \n   **/\n  handleAutoplayClick = () => {\n    if(!this.state.autoplay){ \n      this.setState(state => ({\n        autoplay: !state.autoplay \n      }), ()=>this.autoplay(this.state.selected_move, Object.keys(this.state.history).length));\n    }else{\n      this.setState(state => ({\n        autoplay: !state.autoplay \n      }));\n    } \n  }\n\n  /**\n   * Click-Listener for squares, calls newMove function \n   **/\n  handleClick = (e) => {\n    if(this.state.promotion.from){\n      this.closePromotionPrompt(); \n      return;\n    }\n\n    let square = e.target.dataset.position;\n    let clicked = this.state.piece_clicked; \n\n    if(clicked){\n      if(this.newMove(clicked, square)){\n        this.removeClassesFromAll('moveable', 'active');\n        this.setState({piece_clicked: false});\n      }else{\n        console.log('Error in handleClick');\n      }\n    }\n  }\n\n  /**\n   * Click-Listener for pieces\n   **/\n  handlePieceClick = (e) => {\n    if(this.state.promotion.from){\n      this.closePromotionPrompt(); \n      return;\n    }\n\n    let square = e.target.dataset.position;\n    let clicked = this.state.piece_clicked;\n    if(square===clicked){\n      this.removeClassesFromAll('active', 'moveable');\n      this.setState({piece_clicked: null});\n      return; \n    }\n    if(!clicked){\n      if(this.pieceIsTurnColor(square)){\n        document.getElementById(square).classList.add('active');\n        this.highlightMoves(square);\n        this.setState({piece_clicked: square});\n      }\n    }else{\n      this.removeClassesFromAll('active', 'moveable');\n      if(this.squaresOfSameColor(square, clicked)){ // If another piece of the same color is clicked, switch to that piece being active  \n          document.getElementById(square).classList.add('active');\n          this.highlightMoves(square);\n          this.setState({piece_clicked: square});\n      }else{ // Capture \n        if(this.newMove(clicked, square)){\n          this.setState({piece_clicked: null});\n        }\n      }\n    }\n  }\n\n  closePopup = (text) => {\n    this.setState({popUp: false});\n    if(text) this.loadPGN(text);\n  }\n\n  /*\n  ----------------------------------------------------------------------------------------------------------------------------------\n  ----------------------------------------------------        UTILITY        -------------------------------------------------------\n  ----------------------------------------------------------------------------------------------------------------------------------\n  */\n\n\n  getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\n  }\n\n  /**\n   * Recursive method, goes through all played moves, as long as uninterrupted by state \n   **/\n  autoplay(point, end){\n    console.log(point, end);\n    ++point;\n    if(point>end || !this.state.autoplay){\n      this.setState({autoplay:false});\n      return false;\n    } \n    this.setState({selected_move: point});\n    setTimeout(() => this.autoplay(point, end), AUTOPLAY_SPEED);\n  }\n\n  toggleConvert = (toggle) => toggle ? 'on' : 'off';  \n\n  loadPGNfromServer(url){\n    fetch(url)\n      .then(res => res.text())\n      .then(res => this.loadPGN(res));\n  }\n\n  /**\n   * Loads a proveded PGN (format to save chess-games)\n   * Passes it to chess.js and extracts titles and names of players and game result (if available) to display\n   * Loads moves into state (history and fen_history), as chess.js does not allow to browse through \n   * the move history. As such, each position in the game is saved via the corresponding FEN-string  \n   * Afterwards, chess.js is reset to the starting position \n   **/\n  loadPGN(pgn){\n    let load_result = chess.load_pgn(pgn);\n    let headers = chess.header(); \n    let players = {};\n\n    if(headers.Black){\n      let content = headers.BlackTitle ? `[${headers.BlackTitle}] ${headers.Black}` : headers.Black; \n      players.whiteplayer = content; \n    }if(headers.White){\n      let content = headers.WhiteTitle ? `[${headers.WhiteTitle}] ${headers.White}` : headers.White; \n      players.blackplayer = content;   \n    }\n\n    let result = headers.Result ? 'Result: ' + headers.Result : '';\n    if(headers.Termination) result += ` (${headers.Termination})`; \n    \n    if(load_result){\n      let history = chess.history({verbose:true});\n      let new_history = {}; \n      chess.reset();\n      let fen_history = [chess.fen()];\n      history.forEach((e, i)=>{\n        chess.move(e);\n        fen_history.push(chess.fen());\n        new_history[i] = {from: e.from, to:e.to, san:e.san};\n      });\n      chess.load(fen_history[0]);\n      this.setState({history: new_history, fen_history, loaded_game: pgn, selected_move: 0, result, players});\n\n    }else console.log(load_result);\n  }\n\n  loadFEN(fen){\n    let load_result = chess.load(fen);\n    let fen_history = [chess.fen()];\n    let history = {}; \n    this.setState({fen_history, history, selected_move: 0});\n  }\n\n  // If square is of format piece-square, remove piece (e.g. ba8 => a8) \n  cleanUpSquare = (square) => square.length>2 ? square.slice(1) : square;\n\n  getOtherChessColor = () => chess.turn() === chess.WHITE ? chess.BLACK : chess.WHITE;\n  \n  getRatio(w, b){\n    if(w===0&&b===0) return 0;  \n    let sum = w + b; \n    let whiteshare = w/sum*100; \n    return whiteshare; \n  }\n\n  colorConv = color => color==='w' ? 'white' : 'black';\n\n  squaresOfSameColor = (one, two) => chess.get(one).color===chess.get(two).color;\n\n  pieceIsTurnColor = (piece) => chess.get(piece).color === chess.turn();\n\n  getRowFromSquare(square){ return Number(square.charAt(1)); }\n\n  isOnPromotionSquare(square, color){\n    return color==='w' ? this.getRowFromSquare(square)==8 : this.getRowFromSquare(square)==1; \n  }\n\n  /*\n  ----------------------------------------------------------------------------------------------------------------------------------\n  ----------------------------------------------------     CHESS     ---------------------------------------------------------------\n  ----------------------------------------------------------------------------------------------------------------------------------\n  */\n\n\n  /**\n   * Called by the PromotionPromt-component, passes clicked option to newMove function and \n   **/\n  promotionHandler = (piece, from, to) => {\n    this.setState({promotion: {from: null, to:null, color:null}});\n    this.newMove(from, to, piece);\n  }\n\n  openPromotionPrompt(from, to, color){ this.setState({promotion: {from, to, color}}); }\n\n  closePromotionPrompt = () => { this.setState({promotion: {from: null, to:null, color:null}, piece_clicked: false}); }\n\n\n  makeRandomMove(){\n    let possible_moves = chess.moves({verbose:true});\n    let move = possible_moves[this.getRandomInt(possible_moves.length)]; \n    this.newMove(move.from, move.to)\n  }\n\n  getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n\n  /**\n   * Method for handling new moves. Updates history (overrides if necessary) \n   * Checks for promotion (if a pawn reaches a respective square)\n   * otherwise passes move to chess.js and updates state \n   **/\n  newMove(from, to, promoteTo = false){\n    let fen_history = [...this.state.fen_history]; \n    let history = Object.assign({}, this.state.history);\n    let options = {from, to}; \n\n    if(this.state.selected_move<this.state.fen_history.length){ // Override if a previous move was selected\n      fen_history = fen_history.slice(0, this.state.selected_move+1);\n      let new_history = {}; \n      for(let [key, value] of Object.entries(history)){\n        if(key>=this.state.selected_move) break; \n        new_history[key] = value; \n      }\n        history = Object.assign({}, new_history);\n    }\n\n    if(promoteTo) options.promotion = promoteTo;\n    else{\n      if(this.isOnPromotionSquare(to, chess.turn()) && chess.get(from).type === 'p'){\n        if(this.state.promotion.from===null){ \n          this.openPromotionPrompt(from, to, this.colorConv(chess.turn()));\n          return;\n        }else{\n          options.promotion = promoteTo;\n        } \n      }\n    }\n\n    let res = chess.move(options);\n    \n    if(res){\n      fen_history.push(chess.fen());\n      history[this.state.selected_move] = {from: options.from, to: options.to, san: res.san};\n      if(chess.result()){ // If game over (for any reason)  \n        this.setState(prevState => (\n          {selected_move: prevState.selected_move+1, history, fen_history, result: chess.result()}\n        ));\n        return; \n      }\n      this.setState(prevState => (\n        {selected_move: prevState.selected_move+1, history, fen_history}\n      ));\n      return res.san; \n    }else{\n      console.log('Error making new move: '+res);\n      return false; \n    } \n  }\n\n  /*\n  ----------------------------------------------------------------------------------------------------------------------------------\n  ----------------------------------------------------         DOM            ------------------------------------------------------\n  ----------------------------------------------------------------------------------------------------------------------------------\n  */\n\n\n  highlightMoves(piece){\n    chess.moves({square:piece, verbose:true}).forEach(move=>{\n      this.highlightSquare(move.to, 'moveable'); \n    });\n  }\n\n  highlightSquare(square, highlightClass = 'highlighted'){\n    document.getElementById(square).classList.add(highlightClass);\n  }\n\n  removeClassFromAll = remove => {\n    document.querySelectorAll('.'+remove).forEach(el=>el.classList.remove(remove));\n  }\n\n  removeClassesFromAll = (...classes) => {\n    classes.forEach(e => document.querySelectorAll('.'+e).forEach(el=>el.classList.remove(e)));\n  }\n\n  hideBoardControl = () => {\n     this.removeClassFromAll('attacked');\n  }\n\n  /**\n   * Shows which squares are controlled how much by which color\n   * First removes all \n   * If a king is currently in check, only available moves (including blocks) are highlighted\n   * Otherwise calls the defended_pieces_all funtion from chess.js, which returns the number of attackers \n   * and defenders for each square. \n   * The ratio for each square is calculated and displayed by updating the respective variable in CSS for\n   * each square.  \n   **/\n  showBoardControl = (control_flag=undefined) => { \n    let show_control = (control_flag===undefined) ? this.state.show_control : control_flag;\n    this.removeClassesFromAll('attacked', 'kingcheck');\n    if(chess.in_check()){\n      let square = document.getElementById(chess.get_king());\n      square.classList.add('kingcheck');\n\n      if(!show_control) return; \n      chess.moves({verbose:true}).forEach(move=>{\n        let dom = document.getElementById(move.to);\n        dom.classList.add('attacked');\n        dom.style.setProperty(CONTROL_CLASS, '100%');\n      });\n      return;\n\n    }\n    if(!show_control) return; \n    let control = chess.defended_pieces_all(true, true, false);\n\n    for(let [square, value] of Object.entries(control)){\n      if(value.w>0||value.b>0){ \n        let dom = document.getElementById(square);\n        dom.classList.add('attacked');\n        let ratio = this.getRatio(value.w,value.b);\n        dom.style.setProperty(CONTROL_CLASS, ratio+'%');\n      }\n    } \n  }  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}