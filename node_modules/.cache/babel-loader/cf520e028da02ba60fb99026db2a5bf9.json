{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Moves/Moves.js\";\nimport React, { Component } from 'react';\nimport './Moves.css'; // let boardConv = [];\t\n\nclass Moves extends Component {\n  // moveHistory: [[from, to], [from, to], [from, to], ...]\n  constructor(props) {\n    super(props);\n    let {\n      moveHistory\n    } = props;\n    this.state = {\n      render: [],\n      playedMoves: 0\n    };\n  }\n\n  numberOfRows(length) {\n    return Math.ceil(length / 2);\n  }\n\n  newMoveWhite(move, move_number) {\n    let row_number = /*#__PURE__*/React.createElement('div', {\n      className: 'move_number'\n    }, move_number);\n    let white = /*#__PURE__*/React.createElement('div', {\n      className: 'move_white'\n    }, move);\n    return [row_number, white];\n  }\n\n  newMoveBlack(move) {\n    let black = /*#__PURE__*/React.createElement('div', {\n      className: 'move_black'\n    }, move);\n    return black;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let newHistory = props.moveHistory;\n    let playedMoves = state.playedMoves;\n    let render = [...state.render];\n\n    if (newHistory.length % 2 === 0) {\n      //black played a move\n      render.push(newMoveBlack);\n    } else {\n      //white played a move\n      render.push(this.newMoveWhite(newHistory[newHistory.length - 1], playedMoves + 1));\n    }\n\n    this.setState({\n      render: render,\n      playedMoves: playedMoves\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"moves\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"top_row\",\n        children: \" Moves \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"moves_table\",\n        children: [\" \", this.state.render]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Moves;","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Moves/Moves.js"],"names":["React","Component","Moves","constructor","props","moveHistory","state","render","playedMoves","numberOfRows","length","Math","ceil","newMoveWhite","move","move_number","row_number","createElement","className","white","newMoveBlack","black","getDerivedStateFromProps","newHistory","push","setState"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP,C,CAGA;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAE7B;AAGAE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,QAAI;AAACC,MAAAA;AAAD,QAAgBD,KAApB;AACA,SAAKE,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAIA;;AAEDC,EAAAA,YAAY,CAACC,MAAD,EAAQ;AACnB,WAAOC,IAAI,CAACC,IAAL,CAAUF,MAAM,GAAC,CAAjB,CAAP;AACA;;AAEDG,EAAAA,YAAY,CAACC,IAAD,EAAOC,WAAP,EAAmB;AAC9B,QAAIC,UAAU,gBAAGhB,KAAK,CAACiB,aAAN,CAAoB,KAApB,EAA2B;AAACC,MAAAA,SAAS,EAAC;AAAX,KAA3B,EAAsDH,WAAtD,CAAjB;AACA,QAAII,KAAK,gBAAGnB,KAAK,CAACiB,aAAN,CAAoB,KAApB,EAA2B;AAACC,MAAAA,SAAS,EAAC;AAAX,KAA3B,EAAoDJ,IAApD,CAAZ;AACA,WAAO,CAACE,UAAD,EAAaG,KAAb,CAAP;AACA;;AACDC,EAAAA,YAAY,CAACN,IAAD,EAAM;AACjB,QAAIO,KAAK,gBAAGrB,KAAK,CAACiB,aAAN,CAAoB,KAApB,EAA2B;AAACC,MAAAA,SAAS,EAAC;AAAX,KAA3B,EAAoDJ,IAApD,CAAZ;AACA,WAAOO,KAAP;AACA;;AAED,SAAOC,wBAAP,CAAgClB,KAAhC,EAAuCE,KAAvC,EAA8C;AAC7C,QAAIiB,UAAU,GAAGnB,KAAK,CAACC,WAAvB;AACA,QAAIG,WAAW,GAAGF,KAAK,CAACE,WAAxB;AACA,QAAID,MAAM,GAAG,CAAC,GAAGD,KAAK,CAACC,MAAV,CAAb;;AAEA,QAAGgB,UAAU,CAACb,MAAX,GAAkB,CAAlB,KAAsB,CAAzB,EAA2B;AAAE;AAC5BH,MAAAA,MAAM,CAACiB,IAAP,CAAYJ,YAAZ;AACA,KAFD,MAEK;AAAE;AACNb,MAAAA,MAAM,CAACiB,IAAP,CAAY,KAAKX,YAAL,CAAkBU,UAAU,CAACA,UAAU,CAACb,MAAX,GAAkB,CAAnB,CAA5B,EAAmDF,WAAW,GAAC,CAA/D,CAAZ;AACA;;AACD,SAAKiB,QAAL,CAAc;AAAClB,MAAAA,MAAM,EAAEA,MAAT;AAAiBC,MAAAA,WAAW,EAACA;AAA7B,KAAd;AACA;;AAEDD,EAAAA,MAAM,GAAE;AAEP,wBACC;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA,8BACC;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,EAAE,EAAC,aAAR;AAAA,wBAAwB,KAAKD,KAAL,CAAWC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAYA;;AAvD4B;;AA0D9B,eAAeL,KAAf","sourcesContent":["import React, {Component} from 'react'; \nimport './Moves.css';\n\n\n// let boardConv = [];\t\n\nclass Moves extends Component {\n\n\t// moveHistory: [[from, to], [from, to], [from, to], ...]\n\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tlet {moveHistory} = props; \n\t\tthis.state = {\n\t\t\t render: [],\n\t\t\t playedMoves: 0\n\t\t}\n\t}\n\n\tnumberOfRows(length){\n\t\treturn Math.ceil(length/2);\n\t}\n\n\tnewMoveWhite(move, move_number){\n\t\tlet row_number = React.createElement('div', {className:'move_number'}, move_number);\n\t\tlet white = React.createElement('div', {className:'move_white'},move);\n\t\treturn [row_number, white];\n\t}\n\tnewMoveBlack(move){\n\t\tlet black = React.createElement('div', {className:'move_black'},move);\n\t\treturn black;\n\t}\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\tlet newHistory = props.moveHistory; \n\t\tlet playedMoves = state.playedMoves;\n\t\tlet render = [...state.render]; \n\n\t\tif(newHistory.length%2===0){ //black played a move\n\t\t\trender.push(newMoveBlack);\n\t\t}else{ //white played a move\n\t\t\trender.push(this.newMoveWhite(newHistory[newHistory.length-1], playedMoves+1));\n\t\t}\n\t\tthis.setState({render: render, playedMoves:playedMoves});\n\t}\n\n\trender(){\n\t\t\n\t\treturn (\n\t\t\t<div id=\"moves\"> \n\t\t\t\t<div id=\"top_row\"> Moves </div>\n\t\t\t\t<div id=\"moves_table\"> {this.state.render}\n\t\t\t\t\t\n\t\t\t\t\t{/*<div className=\"move_number\">1</div> <div className=\"move_white\"> e4 </div> <div className=\"move_black\"> e5 </div>\n\t\t\t\t\t<div className=\"move_number\">2</div> <div className=\"move_white\"> e4 </div> <div className=\"move_black\"> e5 </div>\n\t\t\t\t\t<div className=\"move_number\">3</div> <div className=\"move_white\"> e4 </div> <div className=\"move_black\"> e5 </div>\n\t\t\t\t\t<div className=\"move_number\">4</div> <div className=\"move_white\"> e6 </div>*/}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Moves; "]},"metadata":{},"sourceType":"module"}