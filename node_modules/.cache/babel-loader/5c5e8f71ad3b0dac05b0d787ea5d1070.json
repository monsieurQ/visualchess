{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Piece/Piece.js\";\nimport React from 'react';\nimport './Piece.css';\nimport Draggable from 'react-draggable';\nconst typeConv = {\n  0: 'pawn',\n  1: 'bishop',\n  2: 'knight',\n  3: 'rook',\n  4: 'queen',\n  5: 'king'\n};\n\nlet colorConv = number => {\n  if (number === 1) return 'white';else if (number === -1) return 'black';else return null;\n}; // class Piece extends React.Component {\n// \tconstructor(props){\n// \t\tsuper(props);\n// \t\tconst {position, type, color, onClick} = this.props; \n// \t\tthis.state = {\n// \t\t\tposition: position, \n// \t\t\ttype: type,\n// \t\t\tcolor:color,\n// \t\t\tonClick: onClick\n// \t\t};\n// \t}\n// \trender() {\n// \t\t// console.log(colorConv(color));\n// \t\tlet pieceClass = `piece ${typeConv[this.state.type]} ${colorConv(this.state.color)}`\n// \t\treturn (\n// \t\t\t<div className={pieceClass} onClick={()=>this.state.onClick('hi')} /> \n// \t\t);\n// \t}\n// }\n// export default Piece; \n\n\nfunction dragStartHandler(e) {\n  console.log(e);\n}\n\nconst Piece = ({\n  position,\n  type,\n  color,\n  onClick\n}) => {\n  // const {position, type, color, onClick} = this.props; \n  let pieceClass = `piece ${typeConv[type]} ${colorConv(color)}`;\n  let key = `p${position}`;\n  return (\n    /*#__PURE__*/\n    // <Draggable handle='.piece'> <div key={key} className={pieceClass} onClick={()=>onClick('hi')} /> </Draggable>\n    // <Draggable handle=\".wrap\"> <div className='wrap'> <div className={pieceClass} onClick={()=>onClick('hi')} /> </div> </Draggable>\n    _jsxDEV(\"div\", {\n      className: pieceClass,\n      draggable: \"true\",\n      onDragStart: () => dragStartHandler(position),\n      onClick: () => onClick('hi')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this)\n  );\n};\n\n_c = Piece;\nexport default Piece;\n\nvar _c;\n\n$RefreshReg$(_c, \"Piece\");","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Piece/Piece.js"],"names":["React","Draggable","typeConv","colorConv","number","dragStartHandler","e","console","log","Piece","position","type","color","onClick","pieceClass","key"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,MAAMC,QAAQ,GAAG;AAChB,KAAG,MADa;AACL,KAAE,QADG;AACO,KAAE,QADT;AACmB,KAAE,MADrB;AAC6B,KAAE,OAD/B;AACwC,KAAE;AAD1C,CAAjB;;AAIA,IAAIC,SAAS,GAAGC,MAAM,IAAI;AACzB,MAAGA,MAAM,KAAG,CAAZ,EAAe,OAAO,OAAP,CAAf,KACK,IAAGA,MAAM,KAAG,CAAC,CAAb,EAAgB,OAAO,OAAP,CAAhB,KACA,OAAO,IAAP;AACL,CAJD,C,CAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AAEA,SAASC,gBAAT,CAA0BC,CAA1B,EAA4B;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA;;AAGD,MAAMG,KAAK,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA,KAAjB;AAAwBC,EAAAA;AAAxB,CAAD,KAAuC;AACpD;AACA,MAAIC,UAAU,GAAI,SAAQZ,QAAQ,CAACS,IAAD,CAAO,IAAGR,SAAS,CAACS,KAAD,CAAQ,EAA7D;AACA,MAAIG,GAAG,GAAI,IAAGL,QAAS,EAAvB;AACA;AAAA;AACC;AACA;AACA;AAAK,MAAA,SAAS,EAAEI,UAAhB;AAA4B,MAAA,SAAS,EAAC,MAAtC;AAA6C,MAAA,WAAW,EAAE,MAAMT,gBAAgB,CAACK,QAAD,CAAhF;AAA4F,MAAA,OAAO,EAAE,MAAIG,OAAO,CAAC,IAAD;AAAhH;AAAA;AAAA;AAAA;AAAA;AAHD;AAKA,CATD;;KAAMJ,K;AAWN,eAAeA,KAAf","sourcesContent":["import React from 'react'; \nimport './Piece.css';\nimport Draggable from 'react-draggable';\n\nconst typeConv = {\n\t0: 'pawn', 1:'bishop', 2:'knight', 3:'rook', 4:'queen', 5:'king'\n}\n\nlet colorConv = number => {\n\tif(number===1) return 'white';\n\telse if(number===-1) return 'black'; \n\telse return null; \n}\n\n// class Piece extends React.Component {\n\n// \tconstructor(props){\n// \t\tsuper(props);\n// \t\tconst {position, type, color, onClick} = this.props; \n// \t\tthis.state = {\n// \t\t\tposition: position, \n// \t\t\ttype: type,\n// \t\t\tcolor:color,\n// \t\t\tonClick: onClick\n// \t\t};\n// \t}\n// \trender() {\n// \t\t// console.log(colorConv(color));\n// \t\tlet pieceClass = `piece ${typeConv[this.state.type]} ${colorConv(this.state.color)}`\n// \t\treturn (\n// \t\t\t<div className={pieceClass} onClick={()=>this.state.onClick('hi')} /> \n// \t\t);\n// \t}\n\t\n// }\n\n// export default Piece; \n\nfunction dragStartHandler(e){\n\tconsole.log(e);\n}\n\n\nconst Piece = ({position, type, color, onClick} ) => {\n\t// const {position, type, color, onClick} = this.props; \n\tlet pieceClass = `piece ${typeConv[type]} ${colorConv(color)}`;\n\tlet key = `p${position}`;\n\treturn (\n\t\t// <Draggable handle='.piece'> <div key={key} className={pieceClass} onClick={()=>onClick('hi')} /> </Draggable>\n\t\t// <Draggable handle=\".wrap\"> <div className='wrap'> <div className={pieceClass} onClick={()=>onClick('hi')} /> </div> </Draggable>\n\t\t<div className={pieceClass} draggable=\"true\" onDragStart={() => dragStartHandler(position)} onClick={()=>onClick('hi')} />\n\t);\n}\n\nexport default Piece; "]},"metadata":{},"sourceType":"module"}