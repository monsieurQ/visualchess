{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/chess/front/src/components/GamesList/GamesList.js\";\nimport React, { useEffect, useState } from 'react';\nimport './GamesList.css';\n\nconst GamesList = ({\n  games,\n  closePopup\n}) => {\n  let render = [];\n  let whiteplayer = /\\[White\\s\"?(.*?)\"?\\]/;\n  let blackplayer = /\\[Black\\s\"?(.*?)\"?\\]/;\n  let date = /\\[Date\\s\"?(.*?)\"?\\]/; // const [games, setGames] = useState(''); \n  // function loadStudy(){\n  // \tfetch('http://localhost:3001/game?all=true')\n  //       \t.then(res => res.json())\n  //      \t.then(res => {\n  //         \trenderGames(res);\n  //        \t});\n  // }\n  // useEffect(() => {\n  // \tloadStudy(); \n  // }, []); \n  // function renderGames(games){\n  // \tlet render = []; \n  // \tgames.forEach(game => {\n  // \t\trender.push({\n  // \t\t\twhite: game.match(whiteplayer)[1],\n  // \t\t\tblack: game.match(blackplayer)[1],\n  // \t\t\tdate: game.match(date)[1],\n  // \t\t\t// title: game.match(whiteplayer)[1] + ' vs. ' + game.match(blackplayer)[1] + ' ('+game.match(date)[1]+')',\n  // \t\t\tpgn: game\n  // \t\t});\n  // \t});\n  // \tsetGames(render); \n  // }\n\n  console.table(games);\n\n  if (games) {\n    console.log(games[0].match(whiteplayer)[1]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"games_container\",\n    children: games && games.map((i, c) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => closePopup(i.pgn),\n        className: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"white\",\n          children: i.match(whiteplayer)[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: i.match(date)[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"black\",\n          children: i.match(blackplayer)[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 8\n        }, this)]\n      }, c + 'game', true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_c = GamesList;\nexport default GamesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamesList\");","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/chess/front/src/components/GamesList/GamesList.js"],"names":["React","useEffect","useState","GamesList","games","closePopup","render","whiteplayer","blackplayer","date","console","table","log","match","map","i","c","pgn"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,iBAAP;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAyB;AAE1C,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,WAAW,GAAG,sBAAlB;AACA,MAAIC,WAAW,GAAG,sBAAlB;AACA,MAAIC,IAAI,GAAG,qBAAX,CAL0C,CAO1C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACAC,EAAAA,OAAO,CAACC,KAAR,CAAcP,KAAd;;AACA,MAAGA,KAAH,EAAU;AAACM,IAAAA,OAAO,CAACE,GAAR,CAAYR,KAAK,CAAC,CAAD,CAAL,CAASS,KAAT,CAAeN,WAAf,EAA4B,CAA5B,CAAZ;AAA6C;;AACxD,sBACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACGH,KAAK,IACNA,KAAK,CAACU,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnB,0BACC;AAAoB,QAAA,OAAO,EAAE,MAAMX,UAAU,CAACU,CAAC,CAACE,GAAH,CAA7C;AAAsD,QAAA,SAAS,EAAC,MAAhE;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBAAwBF,CAAC,CAACF,KAAF,CAAQN,WAAR,EAAqB,CAArB;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBQ,CAAC,CAACF,KAAF,CAAQJ,IAAR,EAAc,CAAd;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBAAwBM,CAAC,CAACF,KAAF,CAAQL,WAAR,EAAqB,CAArB;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA,SAAUQ,CAAC,GAAC,MAAZ;AAAA;AAAA;AAAA;AAAA,cADD;AAOA,KARD;AAFF;AAAA;AAAA;AAAA;AAAA,UADD;AAeA,CApDD;;KAAMb,S;AAqDN,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react'; \nimport './GamesList.css';\n\n\nconst GamesList = ({games, closePopup}) => {\n\n\tlet render = []; \n\tlet whiteplayer = /\\[White\\s\"?(.*?)\"?\\]/; \n\tlet blackplayer = /\\[Black\\s\"?(.*?)\"?\\]/; \n\tlet date = /\\[Date\\s\"?(.*?)\"?\\]/; \n\n\t// const [games, setGames] = useState(''); \n\n\t// function loadStudy(){\n\t// \tfetch('http://localhost:3001/game?all=true')\n\t//       \t.then(res => res.json())\n\t//      \t.then(res => {\n\t//         \trenderGames(res);\n //        \t});\n\t// }\n\n\t// useEffect(() => {\n\t// \tloadStudy(); \n\t// }, []); \n\n\t// function renderGames(games){\n\t// \tlet render = []; \n\t// \tgames.forEach(game => {\n\t// \t\trender.push({\n\t// \t\t\twhite: game.match(whiteplayer)[1],\n\t// \t\t\tblack: game.match(blackplayer)[1],\n\t// \t\t\tdate: game.match(date)[1],\n\n\t// \t\t\t// title: game.match(whiteplayer)[1] + ' vs. ' + game.match(blackplayer)[1] + ' ('+game.match(date)[1]+')',\n\t// \t\t\tpgn: game\n\t// \t\t});\n\t// \t});\n\t// \tsetGames(render); \n\t// }\n\tconsole.table(games);\n\tif(games) {console.log(games[0].match(whiteplayer)[1]);}\n\treturn (\n\t\t<div className=\"games_container\">\n\t\t\t{ games && \t \n\t\t\t\tgames.map((i, c) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={c+'game'} onClick={() => closePopup(i.pgn)} className=\"game\">\n\t\t\t\t\t\t\t<div className=\"white\">{i.match(whiteplayer)[1]}</div>\n\t\t\t\t\t\t\t<div className=\"date\">{i.match(date)[1]}</div>\n\t\t\t\t\t\t\t<div className=\"black\">{i.match(blackplayer)[1]}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t}) \n\t\t\t}\n\t\t</div>\n\t);\n}\nexport default GamesList;"]},"metadata":{},"sourceType":"module"}