{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/ChessReact/chess/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Board from './components/Board/Board';\nimport Moves from './components/Moves/Moves';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.dropHandler = e => {\n      e.preventDefault();\n      let target = e.target.dataset.position;\n      let origin = e.dataTransfer.getData(\"text/plain\");\n      console.log(`origin: ${origin}, target: ${target}`);\n      this.movePiece(origin, target);\n    };\n\n    this.state = {\n      moveHistory: [],\n      currentMove: 0,\n      colorToMove: 1\n    };\n  }\n\n  switchColor() {\n    return this.state.colorToMove === 1 ? -1 : 1;\n  }\n\n  movePiece(from, to) {\n    let moveHistory_copy = [...this.state.moveHistory];\n    moveHistory_copy.push(to); // let newMove = [from ,to];\n    // let colorToMove = this.state.colorToMove;\n    // if(colorToMove===1){\n    //   moveHistory_copy.push([newMove]); \n    //   colorToMove=-1;\n    // }else if(colorToMove===-1){\n    //   moveHistory_copy[moveHistory_copy.length-1].push([newMove]); \n    //   colorToMove = 1;\n    // }\n\n    this.setState(prevState => ({\n      moveHistory: moveHistory_copy,\n      currentMove: prevState.currentMove++,\n      colorToMove: this.switchColor()\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          onDrop: this.dropHandler,\n          moveHistory: this.state.moveHistory,\n          currentMove: this.state.currentMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"moves\",\n        children: /*#__PURE__*/_jsxDEV(Moves, {\n          moveHistory: this.state.moveHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/App.js"],"names":["React","Component","Board","Moves","App","constructor","dropHandler","e","preventDefault","target","dataset","position","origin","dataTransfer","getData","console","log","movePiece","state","moveHistory","currentMove","colorToMove","switchColor","from","to","moveHistory_copy","push","setState","prevState","render"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAE1BI,EAAAA,WAAW,GAAE;AACX;;AADW,SASbC,WATa,GASEC,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,MAAM,GAAGF,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBC,QAA9B;AACA,UAAIC,MAAM,GAAGL,CAAC,CAACM,YAAF,CAAeC,OAAf,CAAuB,YAAvB,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,WAAUJ,MAAO,aAAYH,MAAO,EAAjD;AACA,WAAKQ,SAAL,CAAeL,MAAf,EAAuBH,MAAvB;AACD,KAfY;;AAEX,SAAKS,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,WAAW,EAAE,CAFF;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKD;;AAUDC,EAAAA,WAAW,GAAE;AACX,WAAO,KAAKJ,KAAL,CAAWG,WAAX,KAA2B,CAA3B,GAA+B,CAAC,CAAhC,GAAoC,CAA3C;AACD;;AAEDJ,EAAAA,SAAS,CAACM,IAAD,EAAOC,EAAP,EAAU;AACjB,QAAIC,gBAAgB,GAAG,CAAC,GAAG,KAAKP,KAAL,CAAWC,WAAf,CAAvB;AACAM,IAAAA,gBAAgB,CAACC,IAAjB,CAAsBF,EAAtB,EAFiB,CAGjB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKG,QAAL,CAAcC,SAAS,KAAK;AAC1BT,MAAAA,WAAW,EAAEM,gBADa;AAE1BL,MAAAA,WAAW,EAAEQ,SAAS,CAACR,WAAV,EAFa;AAG1BC,MAAAA,WAAW,EAAE,KAAKC,WAAL;AAHa,KAAL,CAAvB;AAKD;;AAIDO,EAAAA,MAAM,GAAE;AACN,wBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACC,QAAC,KAAD;AAAO,UAAA,MAAM,EAAE,KAAKvB,WAApB;AAAiC,UAAA,WAAW,EAAE,KAAKY,KAAL,CAAWC,WAAzD;AAAsE,UAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE;AAA9F;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAIG;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACC,QAAC,KAAD;AAAO,UAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAUD;;AAxDyB;;AA6D5B,eAAef,GAAf","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport Board from './components/Board/Board';\nimport Moves from './components/Moves/Moves';\n\nclass App extends Component {\n \n  constructor(){\n    super();\n    this.state = {\n      moveHistory: [],\n      currentMove: 0,\n      colorToMove: 1\n    };\n  }\n\n  dropHandler = (e) => {\n    e.preventDefault();\n    let target = e.target.dataset.position; \n    let origin = e.dataTransfer.getData(\"text/plain\");\n    console.log(`origin: ${origin}, target: ${target}`);\n    this.movePiece(origin, target)\n  };\n\n  switchColor(){\n    return this.state.colorToMove === 1 ? -1 : 1; \n  }\n\n  movePiece(from, to){\n    let moveHistory_copy = [...this.state.moveHistory];\n    moveHistory_copy.push(to); \n    // let newMove = [from ,to];\n    // let colorToMove = this.state.colorToMove;\n\n    // if(colorToMove===1){\n    //   moveHistory_copy.push([newMove]); \n    //   colorToMove=-1;\n    // }else if(colorToMove===-1){\n    //   moveHistory_copy[moveHistory_copy.length-1].push([newMove]); \n    //   colorToMove = 1;\n    // }\n    this.setState(prevState => ({\n      moveHistory: moveHistory_copy, \n      currentMove: prevState.currentMove++,\n      colorToMove: this.switchColor()\n    }));\n  }\n\n\n\n  render(){\n    return(\n    \t<div className='container'>\n\t    \t<div className=\"board\"> \n\t    \t\t<Board onDrop={this.dropHandler} moveHistory={this.state.moveHistory} currentMove={this.state.currentMove} />\n      \t\t</div>\n      \t\t<div className='moves' >\n      \t\t\t<Moves moveHistory={this.state.moveHistory} /> \n      \t\t</div>\n      \t</div> \n    );\n  }\n  \n    \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}