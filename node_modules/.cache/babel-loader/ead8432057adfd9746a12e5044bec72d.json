{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Moves/Moves.js\";\nimport React, { Component } from 'react';\nimport './Moves.css'; // let boardConv = [];\t\n\nclass Moves extends Component {\n  // moveHistory: [[from, to], [from, to], [from, to], ...]\n  constructor(props) {\n    super(props);\n    let {\n      moveHistory\n    } = props;\n    this.state = {\n      render: [],\n      playedMoves: 0\n    };\n  }\n\n  numberOfRows(length) {\n    return Math.ceil(length / 2);\n  }\n\n  newMoveWhite(move) {\n    let row_number = /*#__PURE__*/React.createElement('div', {\n      className: 'move_number'\n    }, number);\n    let white = /*#__PURE__*/React.createElement('div', {\n      className: 'move_white'\n    }, move);\n    return [row_number, white];\n  }\n\n  newMoveBlack(move) {\n    let black = /*#__PURE__*/React.createElement('div', {\n      className: 'move_black'\n    }, move);\n    return black;\n  }\n\n  render() {\n    let moveHistory = this.props.moveHistory;\n    let playedMoves = this.state.playedMoves;\n    let render = [...this.state.render];\n\n    if (moveHistory.length % 2 === 0) {\n      //black played a move\n      render.push(this.newMoveBlack);\n    } else {\n      //white played a move\n      render.push(this.newMoveWhite(moveHistory(moveHistory.length - 1)));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"moves\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"top_row\",\n        children: \" Moves \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"moves_table\",\n        children: [\" \", render]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Moves;","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/components/Moves/Moves.js"],"names":["React","Component","Moves","constructor","props","moveHistory","state","render","playedMoves","numberOfRows","length","Math","ceil","newMoveWhite","move","row_number","createElement","className","number","white","newMoveBlack","black","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP,C,CAGA;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAE7B;AAGAE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,QAAI;AAACC,MAAAA;AAAD,QAAgBD,KAApB;AACA,SAAKE,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAIA;;AAEDC,EAAAA,YAAY,CAACC,MAAD,EAAQ;AACnB,WAAOC,IAAI,CAACC,IAAL,CAAUF,MAAM,GAAC,CAAjB,CAAP;AACA;;AAEDG,EAAAA,YAAY,CAACC,IAAD,EAAM;AACjB,QAAIC,UAAU,gBAAGf,KAAK,CAACgB,aAAN,CAAoB,KAApB,EAA2B;AAACC,MAAAA,SAAS,EAAC;AAAX,KAA3B,EAAsDC,MAAtD,CAAjB;AACA,QAAIC,KAAK,gBAAGnB,KAAK,CAACgB,aAAN,CAAoB,KAApB,EAA2B;AAACC,MAAAA,SAAS,EAAC;AAAX,KAA3B,EAAoDH,IAApD,CAAZ;AACA,WAAO,CAACC,UAAD,EAAaI,KAAb,CAAP;AACA;;AACDC,EAAAA,YAAY,CAACN,IAAD,EAAM;AACjB,QAAIO,KAAK,gBAAGrB,KAAK,CAACgB,aAAN,CAAoB,KAApB,EAA2B;AAACC,MAAAA,SAAS,EAAC;AAAX,KAA3B,EAAoDH,IAApD,CAAZ;AACA,WAAOO,KAAP;AACA;;AAEDd,EAAAA,MAAM,GAAE;AACP,QAAIF,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA7B;AACA,QAAIG,WAAW,GAAG,KAAKF,KAAL,CAAWE,WAA7B;AACA,QAAID,MAAM,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,CAAb;;AAEA,QAAGF,WAAW,CAACK,MAAZ,GAAmB,CAAnB,KAAuB,CAA1B,EAA4B;AAAE;AAC7BH,MAAAA,MAAM,CAACe,IAAP,CAAY,KAAKF,YAAjB;AACA,KAFD,MAEK;AAAE;AACNb,MAAAA,MAAM,CAACe,IAAP,CAAY,KAAKT,YAAL,CAAkBR,WAAW,CAACA,WAAW,CAACK,MAAZ,GAAmB,CAApB,CAA7B,CAAZ;AACA;;AAED,wBACC;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA,8BACC;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,EAAE,EAAC,aAAR;AAAA,wBAAwBH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAYA;;AAnD4B;;AAsD9B,eAAeL,KAAf","sourcesContent":["import React, {Component} from 'react'; \nimport './Moves.css';\n\n\n// let boardConv = [];\t\n\nclass Moves extends Component {\n\n\t// moveHistory: [[from, to], [from, to], [from, to], ...]\n\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tlet {moveHistory} = props; \n\t\tthis.state = {\n\t\t\t render: [],\n\t\t\t playedMoves: 0\n\t\t}\n\t}\n\n\tnumberOfRows(length){\n\t\treturn Math.ceil(length/2);\n\t}\n\n\tnewMoveWhite(move){\n\t\tlet row_number = React.createElement('div', {className:'move_number'}, number);\n\t\tlet white = React.createElement('div', {className:'move_white'},move);\n\t\treturn [row_number, white];\n\t}\n\tnewMoveBlack(move){\n\t\tlet black = React.createElement('div', {className:'move_black'},move);\n\t\treturn black;\n\t}\n\n\trender(){\n\t\tlet moveHistory = this.props.moveHistory; \n\t\tlet playedMoves = this.state.playedMoves;\n\t\tlet render = [...this.state.render]; \n\n\t\tif(moveHistory.length%2===0){ //black played a move\n\t\t\trender.push(this.newMoveBlack);\n\t\t}else{ //white played a move\n\t\t\trender.push(this.newMoveWhite(moveHistory(moveHistory.length-1)));\n\t\t}\n\n\t\treturn (\n\t\t\t<div id=\"moves\"> \n\t\t\t\t<div id=\"top_row\"> Moves </div>\n\t\t\t\t<div id=\"moves_table\"> {render}\n\t\t\t\t\t\n\t\t\t\t\t{/*<div className=\"move_number\">1</div> <div className=\"move_white\"> e4 </div> <div className=\"move_black\"> e5 </div>\n\t\t\t\t\t<div className=\"move_number\">2</div> <div className=\"move_white\"> e4 </div> <div className=\"move_black\"> e5 </div>\n\t\t\t\t\t<div className=\"move_number\">3</div> <div className=\"move_white\"> e4 </div> <div className=\"move_black\"> e5 </div>\n\t\t\t\t\t<div className=\"move_number\">4</div> <div className=\"move_white\"> e6 </div>*/}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Moves; "]},"metadata":{},"sourceType":"module"}