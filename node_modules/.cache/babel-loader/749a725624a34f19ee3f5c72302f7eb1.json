{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/chess/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Moves from './components/Moves/Moves'; // import Squares from './components/Squares/Squares';\n\nimport Draggable from 'react-draggable';\nimport * as ChessJS from 'chess.js';\nconst Chess = typeof ChessJS === \"function\" ? ChessJS : ChessJS.Chess;\nconst chess = new Chess(); // import {Chess} from './chess.js' \n// TYPES (negative values for black)\n// PAWN - 1 \n// BISHOP - 2 \n// KNIGHT - 3 \n// ROOK - 4\n// QUEEN - 5 \n// KING - 6 \n\nconst startingPosition = [-4, -3, -2, -5, -6, -2, -3, -4, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 4, 3, 2, 5, 6, 2, 3, 4];\nconst conversion = [];\nconst rev_conversion = {};\nlet r = 0;\nlet c = 0;\nArray(64).fill(null).forEach((e, i) => {\n  conversion[i] = [r, c];\n  rev_conversion[Number('' + r + c)] = i;\n  c++;\n\n  if (c > 7) {\n    r++;\n    c = 0;\n  }\n});\n/*\n00 01 02 03 04 05 06 07 \n10 11 12 13 14 15 16 17 \n20 21 22 23 24 25 26 27 \n30 31 32 33 34 35 36 37 \n40 41 42 43 44 45 46 47 \n50 51 52 53 54 55 56 57 \n60 61 62 63 64 65 66 67 \n70 71 72 73 74 75 76 77 \n*/\n// Idee: in Array nach den Squares einbauen, ob könig sich bewegt hat \n//[65]=0|1 -> whiteKing moved \n//[66]=0|1 -> whiteRook short moved \n// etc. \n// und ob König gerade in Schach steht \n// (\\d{1,2})((?:(?:O-O[-0]?)|(?:[KQNBR][a-h]?x?[a-h]x?[1-8])|(?:[a-h]x?[a-h]?[1-8]))\\+?)((?:(?:O-O[-0]?)|(?:[KQNBR][a-h]?x?[a-h]x?[1-8])|(?:[a-h]x?[a-h]?[1-8]))\\+?)\n\nlet squareID = [\"a8\", \"b8\", \"c8\", \"d8\", \"e8\", \"f8\", \"g8\", \"h8\", \"a7\", \"b7\", \"c7\", \"d7\", \"e7\", \"f7\", \"g7\", \"h7\", \"a6\", \"b6\", \"c6\", \"d6\", \"e6\", \"f6\", \"g6\", \"h6\", \"a5\", \"b5\", \"c5\", \"d5\", \"e5\", \"f5\", \"g5\", \"h5\", \"a4\", \"b4\", \"c4\", \"d4\", \"e4\", \"f4\", \"g4\", \"h4\", \"a3\", \"b3\", \"c3\", \"d3\", \"e3\", \"f3\", \"g3\", \"h3\", \"a2\", \"b2\", \"c2\", \"d2\", \"e2\", \"f2\", \"g2\", \"h2\", \"a1\", \"b1\", \"c1\", \"d1\", \"e1\", \"f1\", \"g1\", \"h1\"];\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.colorConv = color => {\n      return color === 'w' ? 'white' : 'black';\n    };\n\n    this.dragOverHandler = e => {\n      e.preventDefault(e);\n      requestAnimationFrame(function () {\n        e.target.classList.add('dragover');\n      });\n    };\n\n    this.dragLeaveHandler = e => {\n      e.preventDefault();\n      requestAnimationFrame(function () {\n        e.target.classList.remove('dragover');\n      });\n    };\n\n    this.handleEvalClick = () => {\n      console.log(this.evalPositionObj(this.state.positions[this.state.currentMove]));\n    };\n\n    this.dragStartHandler = (e, i) => {\n      e.dataTransfer.effectAllowed = \"all\";\n      e.dataTransfer.dropEffect = \"move\";\n      e.dataTransfer.setData(\"text/plain\", i);\n      requestAnimationFrame(function () {\n        e.target.classList.add('hide');\n      });\n      this.highlightMoves(i);\n    };\n\n    this.dragEndHandler = e => {\n      e.preventDefault();\n      requestAnimationFrame(function () {\n        e.target.classList.remove('hide');\n      });\n    };\n\n    this.dropHandler = (e, target) => {\n      e.preventDefault();\n      this.removeClassFromAll(['dragover', 'moveable']);\n      let origin = e.dataTransfer.getData('text/plain');\n      console.log(origin, target);\n      let a = this.attemptMove(origin, target);\n      console.log(a); // this.removeClassFromAll('moveable');\n      // let moves = this.state.evalObj[origin].moves;\n      // if(moves.includes(target)) this.setState({piece_dragging: false}, this.newMove(origin, target));\n      // else this.setState({piece_dragging: false});\n    };\n\n    this.moveClick = number => {\n      console.log('move clicked', number);\n      this.setState(prevState => ({\n        selectedMove: number,\n        evalObj: this.evalPositionObj(prevState.positions[number]),\n        colorToMove: this.getColorToMoveByMoveNumber(number)\n      }));\n    };\n\n    this.handleClick = square => {\n      let clicked = this.state.piece_clicked;\n\n      if (clicked) {\n        if (this.newMove(clicked, square)) {\n          this.removeClassFromAll('moveable');\n          this.removeClassFromAll('active');\n          this.setState({\n            piece_clicked: false\n          });\n        } else {// this.removeClassFromAll('active'); \n          // this.setState({piece_clicked: false })\n        }\n      }\n    };\n\n    this.squareColorConv = color => {\n      if (color === 'light') return 'w';else if (color === 'dark') return 'b';\n    };\n\n    this.handlePieceClick = square => {\n      let clicked = this.state.piece_clicked;\n\n      if (!clicked) {\n        if (this.pieceIsTurnColor(square)) {\n          document.getElementById(square).classList.add('active');\n          this.highlightMoves(square);\n          this.setState({\n            piece_clicked: square\n          });\n        }\n      } else {\n        this.removeClassesFromAll(['active', 'moveable']);\n\n        if (this.squaresOfSameColor(square, clicked)) {\n          // Wenn selbfarbiges, anderes piece gedrückt \n          document.getElementById(square).classList.add('active');\n          this.highlightMoves(square);\n          this.setState({\n            piece_clicked: square\n          });\n        } else {\n          // Capture \n          if (this.newMove(clicked, square)) {\n            this.removeClassesFromAll(['active', 'moveable']);\n            this.setState({\n              piece_clicked: null\n            });\n          }\n        }\n      }\n    };\n\n    this.removeClassFromAll = remove => {\n      document.querySelectorAll('.' + remove).forEach(el => el.classList.remove(remove));\n    };\n\n    this.removeClassesFromAll = classes => {\n      classes.forEach(e => document.querySelectorAll('' + e).forEach(el => el.classList.remove(e)));\n    };\n\n    this.state = {\n      colorToMove: chess.turn(),\n      piece_clicked: false,\n      moves: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: chess.board().flat().map((square, i) => {\n          return square ? /*#__PURE__*/_jsxDEV(\"div\", {\n            onDragOver: this.dragOverHandler,\n            onDragLeave: this.dragLeaveHandler,\n            onDrop: e => this.onDrop(e, i),\n            id: squareID[i],\n            className: \"square\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `piece ${this.colorConv(square.color)} ${square.type}`,\n              draggable: \"true\",\n              \"data-position\": squareID[i],\n              onDragStart: e => this.dragStartHandler(e, squareID[i]),\n              onDragEnd: () => this.dragEndHandler,\n              onClick: () => this.handlePieceClick(squareID[i])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)\n          }, 'square' + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            id: squareID[i],\n            onDragOver: this.dragOverHandler,\n            onDragLeave: this.dragLeaveHandler,\n            onClick: () => this.handleClick(squareID[i]),\n            onDrop: e => this.dropHandler(e, squareID[i]),\n            className: \"square\"\n          }, 'square' + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"moves\",\n        children: /*#__PURE__*/_jsxDEV(Moves, {\n          onClick: this.moveClick,\n          colorToMove: this.state.colorToMove,\n          evalClick: this.handleEvalClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n  convertBack(row, column) {\n    return rev_conversion[Number('' + row + column)];\n  } // @e: dragEvent\n  // @i: square of dragged piece \n\n\n  getColorToMoveByMoveNumber(number) {\n    return number % 2 === 0 ? 1 : -1;\n  }\n\n  squaresOfSameColor(one, two) {\n    return chess.get(one).color === chess.get(two).color;\n  }\n\n  highlightMoves(piece) {\n    chess.moves({\n      square: piece,\n      verbose: true\n    }).forEach(move => {\n      document.getElementById(move.to).classList.add('moveable');\n    });\n  }\n\n  pieceIsTurnColor(piece) {\n    return chess.get(piece).color === chess.turn();\n  }\n\n  newMove(from, to) {\n    let res = chess.move({\n      from,\n      to\n    });\n\n    if (res) {\n      let moves = [...this.state.moves];\n      moves.push(res.san);\n      this.setState({\n        moves: moves,\n        colorToMove: chess.turn()\n      });\n      return res.san;\n    } else return false;\n  }\n\n  attemptMove(from, to) {\n    return chess.move({\n      from,\n      to\n    });\n  }\n\n  switchColor() {\n    return this.state.colorToMove === 1 ? -1 : 1;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/chess/src/App.js"],"names":["React","Component","Moves","Draggable","ChessJS","Chess","chess","startingPosition","conversion","rev_conversion","r","c","Array","fill","forEach","e","i","Number","squareID","App","constructor","colorConv","color","dragOverHandler","preventDefault","requestAnimationFrame","target","classList","add","dragLeaveHandler","remove","handleEvalClick","console","log","evalPositionObj","state","positions","currentMove","dragStartHandler","dataTransfer","effectAllowed","dropEffect","setData","highlightMoves","dragEndHandler","dropHandler","removeClassFromAll","origin","getData","a","attemptMove","moveClick","number","setState","prevState","selectedMove","evalObj","colorToMove","getColorToMoveByMoveNumber","handleClick","square","clicked","piece_clicked","newMove","squareColorConv","handlePieceClick","pieceIsTurnColor","document","getElementById","removeClassesFromAll","squaresOfSameColor","querySelectorAll","el","classes","turn","moves","render","board","flat","map","onDrop","type","convertBack","row","column","one","two","get","piece","verbose","move","to","from","res","push","san","switchColor"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport Moves from './components/Moves/Moves';\n// import Squares from './components/Squares/Squares';\nimport Draggable from 'react-draggable';\nimport * as ChessJS from 'chess.js';\nconst Chess = typeof ChessJS === \"function\" ? ChessJS : ChessJS.Chess;\nconst chess = new Chess();\n\n// import {Chess} from './chess.js' \n\n\n// TYPES (negative values for black)\n// PAWN - 1 \n// BISHOP - 2 \n// KNIGHT - 3 \n// ROOK - 4\n// QUEEN - 5 \n// KING - 6 \nconst startingPosition = \n[\n-4, -3, -2, -5, -6, -2, -3, -4,\n-1, -1, -1, -1, -1, -1, -1, -1,\n0, 0, 0, 0, 0, 0, 0, 0,\n0, 0, 0, 0, 0, 0, 0, 0,\n0, 0, 0, 0, 0, 0, 0, 0,\n0, 0, 0, 0, 0, 0, 0, 0,\n1, 1, 1, 1, 1, 1, 1, 1,\n4, 3, 2, 5, 6, 2, 3, 4\n];\n\nconst conversion = [];\nconst rev_conversion = {}; \nlet r = 0; let c = 0; \nArray(64).fill(null).forEach((e, i)=>{\n  conversion[i] = [r, c];\n  rev_conversion[Number(''+r+c)] = i;\n  c++; \n  if(c>7){\n    r++;\n    c=0;\n  }\n});\n\n/*\n00 01 02 03 04 05 06 07 \n10 11 12 13 14 15 16 17 \n20 21 22 23 24 25 26 27 \n30 31 32 33 34 35 36 37 \n40 41 42 43 44 45 46 47 \n50 51 52 53 54 55 56 57 \n60 61 62 63 64 65 66 67 \n70 71 72 73 74 75 76 77 \n*/\n\n\n// Idee: in Array nach den Squares einbauen, ob könig sich bewegt hat \n//[65]=0|1 -> whiteKing moved \n//[66]=0|1 -> whiteRook short moved \n// etc. \n// und ob König gerade in Schach steht \n\n\n// (\\d{1,2})((?:(?:O-O[-0]?)|(?:[KQNBR][a-h]?x?[a-h]x?[1-8])|(?:[a-h]x?[a-h]?[1-8]))\\+?)((?:(?:O-O[-0]?)|(?:[KQNBR][a-h]?x?[a-h]x?[1-8])|(?:[a-h]x?[a-h]?[1-8]))\\+?)\n\nlet squareID = [\"a8\", \"b8\", \"c8\", \"d8\", \"e8\", \"f8\", \"g8\", \"h8\", \"a7\", \"b7\", \"c7\", \"d7\", \"e7\", \"f7\", \"g7\", \"h7\", \"a6\", \"b6\", \"c6\", \"d6\", \"e6\", \"f6\", \"g6\", \"h6\", \"a5\", \"b5\", \"c5\", \"d5\", \"e5\", \"f5\", \"g5\", \"h5\", \"a4\", \"b4\", \"c4\", \"d4\", \"e4\", \"f4\", \"g4\", \"h4\", \"a3\", \"b3\", \"c3\", \"d3\", \"e3\", \"f3\", \"g3\", \"h3\", \"a2\", \"b2\", \"c2\", \"d2\", \"e2\", \"f2\", \"g2\", \"h2\", \"a1\", \"b1\", \"c1\", \"d1\", \"e1\", \"f1\", \"g1\", \"h1\"];\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      colorToMove: chess.turn(),\n      piece_clicked: false,\n      moves: []\n    };  \n  }\n\n  colorConv = color => {\n    return color==='w' ? 'white' : 'black';\n  }\n\n  render(){\n    return(\n      <div className='container'>\n        <div className='board'> \n          {\n            chess.board().flat().map((square, i)=>{\n              return square \n              ? \n              <div \n                onDragOver={this.dragOverHandler} \n                onDragLeave={this.dragLeaveHandler} \n                onDrop={(e)=>this.onDrop(e, i)} \n                id={squareID[i]}\n                key={'square'+i} \n                className='square'> \n                  <div \n                    className={`piece ${this.colorConv(square.color)} ${square.type}`}\n                    draggable='true'\n                    data-position={squareID[i]}\n                    onDragStart={(e)=>this.dragStartHandler(e, squareID[i])} onDragEnd={()=>this.dragEndHandler}\n                    onClick={()=>this.handlePieceClick(squareID[i])} \n                  />\n              </div>\n              : \n              <div \n                id={squareID[i]}\n                onDragOver={this.dragOverHandler} \n                onDragLeave={this.dragLeaveHandler} \n                onClick={()=>this.handleClick(squareID[i])} \n                onDrop={(e)=>this.dropHandler(e, squareID[i])} \n                key={'square'+i} \n                className='square' \n            />;\n          })\n        }\n      </div>\n      <div className='moves'> \n        <Moves \n          onClick={this.moveClick} \n          colorToMove={this.state.colorToMove}\n          evalClick={this.handleEvalClick}\n          /> \n      </div>\n      </div> \n    );\n  } \n\n  dragOverHandler = (e) => {\n    e.preventDefault(e);\n    requestAnimationFrame(function () {\n      e.target.classList.add('dragover');\n    });\n  }\n  \n  dragLeaveHandler = (e) => {\n    e.preventDefault(); \n    requestAnimationFrame(function () {\n      e.target.classList.remove('dragover');\n    }); \n  }\n\n  handleEvalClick = () => {\n    console.log(this.evalPositionObj(this.state.positions[this.state.currentMove]));\n  }\n\n  convertBack(row, column){\n    return rev_conversion[Number(''+row+column)]; \n  }\n\n  // @e: dragEvent\n  // @i: square of dragged piece \n  dragStartHandler = (e, i) => {\n    e.dataTransfer.effectAllowed = \"all\"\n    e.dataTransfer.dropEffect = \"move\";\n    e.dataTransfer.setData(\"text/plain\", i);\n    requestAnimationFrame(function () {\n      e.target.classList.add('hide');\n    });\n    this.highlightMoves(i);   \n  }\n\n  dragEndHandler = (e) =>{\n    e.preventDefault();\n    requestAnimationFrame(function () {\n        e.target.classList.remove('hide');\n      });\n  }\n\n  dropHandler = (e, target) => {\n    e.preventDefault();\n    this.removeClassFromAll(['dragover', 'moveable']);\n    let origin = e.dataTransfer.getData('text/plain');\n    console.log(origin, target);\n    let a = this.attemptMove(origin, target);\n    console.log(a);\n    // this.removeClassFromAll('moveable');\n    // let moves = this.state.evalObj[origin].moves;\n    // if(moves.includes(target)) this.setState({piece_dragging: false}, this.newMove(origin, target));\n    // else this.setState({piece_dragging: false});\n  }\n\n  getColorToMoveByMoveNumber(number){\n    return number%2===0 ? 1 : -1; \n  }\n\n  moveClick = (number) => {\n    console.log('move clicked',number);\n    this.setState(prevState=>({\n      selectedMove: number,\n      evalObj: this.evalPositionObj(prevState.positions[number]),\n      colorToMove: this.getColorToMoveByMoveNumber(number)\n    }));\n  }\n\n  handleClick = (square) => {\n    let clicked = this.state.piece_clicked; \n    if(clicked){\n      if(this.newMove(clicked, square)){\n        this.removeClassFromAll('moveable');\n        this.removeClassFromAll('active');\n        this.setState({piece_clicked: false});\n      }else{\n        // this.removeClassFromAll('active'); \n        // this.setState({piece_clicked: false })\n      }\n    }\n  }\n\n  squareColorConv = color => {\n    if(color==='light') return 'w'; \n    else if(color==='dark') return 'b';\n  }\n\n  squaresOfSameColor(one, two){\n    return chess.get(one).color===chess.get(two).color;\n  }\n\n  highlightMoves(piece){\n    chess.moves({square:piece, verbose:true}).forEach(move=>{\n      document.getElementById(move.to).classList.add('moveable');\n    });\n  }\n\n  handlePieceClick = (square) => {\n    let clicked = this.state.piece_clicked;\n    if(!clicked){\n      if(this.pieceIsTurnColor(square)){\n        document.getElementById(square).classList.add('active');\n        this.highlightMoves(square);\n        this.setState({piece_clicked: square});\n      }\n    }else{\n      this.removeClassesFromAll(['active', 'moveable']);\n      if(this.squaresOfSameColor(square, clicked)){ // Wenn selbfarbiges, anderes piece gedrückt \n          document.getElementById(square).classList.add('active');\n          this.highlightMoves(square);\n          this.setState({piece_clicked: square});\n      }else{ // Capture \n        if(this.newMove(clicked, square)){\n          this.removeClassesFromAll(['active', 'moveable']);\n          this.setState({piece_clicked: null});\n        }\n      }\n    }\n  }\n\n  pieceIsTurnColor(piece){\n    return chess.get(piece).color === chess.turn();\n  }\n\n  newMove(from, to){\n    let res = chess.move({from,to});\n    if(res){\n      let moves = [...this.state.moves];\n      moves.push(res.san);\n      this.setState({moves: moves, colorToMove:chess.turn()});\n      return res.san; \n    }else return false; \n  }\n\n  attemptMove(from, to){\n    return chess.move({from, to});\n  }\n\n  removeClassFromAll = remove => {\n    document.querySelectorAll('.'+remove).forEach(el=>el.classList.remove(remove));\n  }\n\n  removeClassesFromAll = classes => {\n    classes.forEach(e => document.querySelectorAll(''+e).forEach(el=>el.classList.remove(e)));\n  }\n\n  switchColor(){ return this.state.colorToMove === 1 ? -1 : 1; }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}