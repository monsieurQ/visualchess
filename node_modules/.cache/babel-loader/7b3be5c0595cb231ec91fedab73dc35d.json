{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/q/Documents/WebDocuments/ChessReact/chess/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react'; // import Board from './components/Board/Board';\n\nimport Moves from './components/Moves/Moves';\nimport Square from './components/Square/Square'; // TYPES \n// PAWN - 0 \n// BISHOP - 1 \n// KNIGHT - 2 \n// ROOK - 3 \n// QUEEN - 4 \n// KING - 5\n\nconst startingPosition = {\n  // position: [type, color]\n  //PAWNS \n  21: [0, 1],\n  22: [0, 1],\n  23: [0, 1],\n  24: [0, 1],\n  25: [0, 1],\n  26: [0, 1],\n  27: [0, 1],\n  28: [0, 1],\n  71: [0, -1],\n  72: [0, -1],\n  73: [0, -1],\n  74: [0, -1],\n  75: [0, -1],\n  76: [0, -1],\n  77: [0, -1],\n  78: [0, -1],\n  81: [3, -1],\n  11: [3, 1],\n  88: [3, -1],\n  18: [3, 1],\n  // ROOKS \n  82: [2, -1],\n  13: [2, 1],\n  17: [2, 1],\n  87: [2, -1],\n  // KNIGHTS \n  83: [1, -1],\n  86: [1, -1],\n  12: [1, 1],\n  16: [1, 1],\n  // BISHOPS \n  14: [4, 1],\n  84: [4, -1],\n  //QUEENS \n  15: [5, 1],\n  85: [5, -1] //KINGS \n\n};\nconst boardLayout = [81, 82, 83, 84, 85, 86, 87, 88, 71, 72, 73, 74, 75, 76, 77, 78, 61, 62, 63, 64, 65, 66, 67, 68, 51, 52, 53, 54, 55, 56, 57, 58, 41, 42, 43, 44, 45, 46, 47, 48, 31, 32, 33, 34, 35, 36, 37, 38, 21, 22, 23, 24, 25, 26, 27, 28, 11, 12, 13, 14, 15, 16, 17, 18];\n\nclass App extends Component {\n  constructor() {\n    super(); // this.initSquares=this.initSquares.bind(this);\n    // this.renderSquares=this.renderSquares.bind(this);\n\n    this.initSquares = (currentMove, position) => {\n      let squares = [];\n      let click = this.handleClick;\n      let pclick = this.handlePieceClick;\n      let r = 8;\n      let c = 1;\n      let bgs = ['black', 'white'];\n      let tick = 0;\n      let onDrop = this.dropHandler;\n\n      for (let i = 0; i < 64; i++) {\n        let pos = Number('' + c + r);\n        squares[pos] = {\n          key: '' + c + r,\n          row: r,\n          column: c,\n          background: bgs[tick],\n          piece: position[pos],\n          output: function () {\n            let p = this.piece ? this.piece : null;\n            return /*#__PURE__*/_jsxDEV(Square, {\n              onClick: click,\n              onDrop: onDrop,\n              row: this.row,\n              pieceClick: pclick,\n              column: this.column,\n              background: this.background,\n              piece: p\n            }, currentMove + '/' + this.column + this.row, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 18\n            }, this);\n          },\n          hasPiece: function () {\n            return this.piece === null || this.piece === undefined ? false : true;\n          },\n          color: function () {\n            return this.hasPiece() ? this.piece[1] : false;\n          },\n          type: function () {\n            return this.hasPiece() ? this.piece[0] : false;\n          }\n        };\n        c++;\n\n        if (c > 8) {\n          c = 1;\n          r--;\n        } else tick = tick === 0 ? 1 : 0;\n      }\n\n      return squares;\n    };\n\n    this.renderSquares = squares => {\n      let render = [];\n      boardLayout.forEach(element => {\n        render.push(squares[element].output());\n      });\n      return render;\n    };\n\n    this.moveClick = (color, number) => {\n      console.log('move clicked', color, number);\n    };\n\n    this.handleClick = e => {\n      console.log(this.state.squares_history);\n      this.setState(prevState => ({\n        squares: [...this.state.squares_history[0]]\n      }));\n    };\n\n    this.handlePieceClick = (e, position) => {\n      this.state.squares[position].availableMoves();\n    };\n\n    this.dropHandler = e => {\n      e.preventDefault();\n      e.target.classList.remove('dragover');\n      let target = e.target.dataset.position;\n      let origin = e.dataTransfer.getData(\"text/plain\"); // console.log(`origin: ${origin}, target: ${target}`);\n\n      this.newMove(origin, target);\n    };\n\n    this.state = {\n      // moveHistory: [],\n      currentMove: 0,\n      lastMove: null,\n      colorToMove: 1,\n      selectedMove: 0,\n      squares: this.initSquares(0, startingPosition),\n      history: [startingPosition]\n    };\n  }\n\n  switchColor() {\n    return this.state.colorToMove === 1 ? -1 : 1;\n  }\n\n  newMove(from, to) {\n    let squares_copy = [...this.state.squares];\n    if (squares_copy[from].color() !== this.state.colorToMove) return;\n    if (squares_copy[from].color() === squares_copy[to].color()) return;\n    let type = squares_copy[from].type();\n    let currentMove = this.state.currentMove;\n    let history_copy = JSON.parse(JSON.stringify(this.state.history));\n    let newposition = [...history_copy[currentMove]];\n    newposition[from] = null;\n    newposition[to] = [type, squares_copy[to].color()];\n    history_copy[currentMove + 1] = [...newposition];\n    squares_copy[to].piece = squares_copy[from].piece;\n    squares_copy[from].piece = null;\n    this.setState(prevState => ({\n      squares: squares_copy,\n      history: history_copy,\n      lastMove: [prevState.colorToMove, type, to],\n      currentMove: prevState.currentMove + 1,\n      colorToMove: this.switchColor()\n    }));\n  }\n\n  render() {\n    let {\n      squares,\n      currentMove\n    } = this.state;\n    console.log(this.state.history);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: this.renderSquares(squares)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"moves\",\n        children: /*#__PURE__*/_jsxDEV(Moves, {\n          onClick: this.moveClick,\n          lastMove: this.state.lastMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/q/Documents/WebDocuments/ChessReact/chess/src/App.js"],"names":["React","Component","Moves","Square","startingPosition","boardLayout","App","constructor","initSquares","currentMove","position","squares","click","handleClick","pclick","handlePieceClick","r","c","bgs","tick","onDrop","dropHandler","i","pos","Number","key","row","column","background","piece","output","p","hasPiece","undefined","color","type","renderSquares","render","forEach","element","push","moveClick","number","console","log","e","state","squares_history","setState","prevState","availableMoves","preventDefault","target","classList","remove","dataset","origin","dataTransfer","getData","newMove","lastMove","colorToMove","selectedMove","history","switchColor","from","to","squares_copy","history_copy","JSON","parse","stringify","newposition"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\n// import Board from './components/Board/Board';\nimport Moves from './components/Moves/Moves';\nimport Square from './components/Square/Square';\n\n\n// TYPES \n// PAWN - 0 \n// BISHOP - 1 \n// KNIGHT - 2 \n// ROOK - 3 \n// QUEEN - 4 \n// KING - 5\nconst startingPosition = \n{\n  // position: [type, color]\n  //PAWNS \n  21: [0, 1], 22: [0, 1], 23: [0, 1], 24: [0, 1], 25: [0, 1], 26: [0, 1], 27: [0, 1], 28: [0, 1],\n  71: [0, -1], 72: [0, -1], 73: [0, -1], 74: [0, -1], 75: [0, -1], 76: [0, -1], 77: [0, -1], 78: [0, -1],\n  \n  81: [3, -1], 11: [3, 1], 88: [3, -1], 18: [3, 1], // ROOKS \n  82: [2, -1], 13: [2,1], 17:[2,1], 87: [2,-1], // KNIGHTS \n  83: [1,-1], 86: [1,-1], 12: [1,1], 16: [1,1], // BISHOPS \n  14: [4,1], 84: [4,-1], //QUEENS \n  15: [5,1], 85: [5,-1] //KINGS \n};\nconst boardLayout = \n[81,82,83,84,85,86,87,88,\n71,72,73,74,75,76,77,78,\n61,62,63,64,65,66,67,68,\n51,52,53,54,55,56,57,58,\n41,42,43,44,45,46,47,48,\n31,32,33,34,35,36,37,38,\n21,22,23,24,25,26,27,28,\n11,12,13,14,15,16,17,18\n];\n\nclass App extends Component {\n  constructor(){\n    super();\n    // this.initSquares=this.initSquares.bind(this);\n    // this.renderSquares=this.renderSquares.bind(this);\n    this.state = {\n      // moveHistory: [],\n      currentMove: 0,\n      lastMove: null,\n      colorToMove: 1,\n      selectedMove: 0,\n      squares: this.initSquares(0, startingPosition),\n      history: [startingPosition],\n    };  \n  }\n\n  initSquares = (currentMove, position) => {\n    let squares = [];\n    let click = this.handleClick;\n    let pclick = this.handlePieceClick;\n    let r = 8;\n    let c = 1; \n    let bgs = ['black', 'white'];\n    let tick = 0; \n    let onDrop = this.dropHandler;\n    for(let i =0;i<64;i++){\n      let pos = Number(''+c+r);\n      squares[pos] = {\n        key: ''+c+r,\n        row: r,\n        column: c,\n        background: bgs[tick],\n        piece: position[pos],\n        output: function(){\n          let p = this.piece ? this.piece : null; \n          return <Square key={currentMove+'/'+this.column+this.row} onClick={click} onDrop={onDrop} row={this.row} pieceClick={pclick} column={this.column} background={this.background} piece={p} />;\n        },\n        hasPiece: function(){\n          return (this.piece===null||this.piece===undefined) ? false : true; \n        },\n        color: function(){\n          return this.hasPiece() ? this.piece[1] : false;  \n        },\n        type: function(){\n          return this.hasPiece() ? this.piece[0] : false;  \n        }\n      };\n      c++; \n      if(c>8){\n        c = 1;\n        r--;\n      }else tick = tick === 0 ? 1 : 0;\n    }\n    return squares; \n  };\n\n  renderSquares = (squares) => {\n    let render = [];\n    boardLayout.forEach(element => {\n      render.push(squares[element].output());\n    });\n    return render; \n  };\n\n  moveClick = (color, number) => {\n    console.log('move clicked', color, number);\n  }\n\n  handleClick = (e) => {\n    console.log(this.state.squares_history);\n    this.setState(prevState=>({\n      squares: [...this.state.squares_history[0]]\n    }));\n  };\n\n  handlePieceClick = (e, position) => {\n    this.state.squares[position].availableMoves();\n  }\n\n  dropHandler = (e) => {\n    e.preventDefault();\n    e.target.classList.remove('dragover');\n    let target = e.target.dataset.position; \n    let origin = e.dataTransfer.getData(\"text/plain\");\n    // console.log(`origin: ${origin}, target: ${target}`);\n    this.newMove(origin, target)\n  };\n\n  switchColor(){\n    return this.state.colorToMove === 1 ? -1 : 1; \n  }\n\n  newMove(from, to){\n    let squares_copy = [...this.state.squares];\n    if(squares_copy[from].color()!==this.state.colorToMove) return; \n    if(squares_copy[from].color()===squares_copy[to].color()) return; \n    \n    let type = squares_copy[from].type();\n    let currentMove = this.state.currentMove;\n\n    let history_copy = JSON.parse(JSON.stringify(this.state.history)); \n    let newposition = [...history_copy[currentMove]]; \n    newposition[from] = null; \n    newposition[to] = [type, squares_copy[to].color()];\n    history_copy[currentMove+1] = [...newposition];\n\n    squares_copy[to].piece = squares_copy[from].piece;\n    squares_copy[from].piece = null; \n\n    this.setState(prevState => ({\n      squares: squares_copy,\n      history: history_copy,\n      lastMove: [prevState.colorToMove, type, to], \n      currentMove: prevState.currentMove+1,\n      colorToMove: this.switchColor()\n    }));\n  };\n\n  render(){\n    let {squares, currentMove} = this.state;\n    console.log(this.state.history);\n    return(\n    \t<div className='container'>\n\t    \t<div className=\"board\"> \n          {this.renderSquares(squares)}\n\t    \t\t{/*<Board onDrop={this.dropHandler} lastMove={this.state.lastMove} moveHistory={this.state.moveHistory} currentMove={this.state.currentMove} />*/}\n      \t</div>\n      \t\t<div className='moves' >\n      \t\t\t<Moves onClick={this.moveClick} lastMove={this.state.lastMove} /> \n      \t\t</div>\n      \t</div> \n    );\n  }   \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}